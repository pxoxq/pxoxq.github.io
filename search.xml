<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 部署时报错 Error: Spawn failed</title>
      <link href="/pages/hexo/error-spawn-failed.html"/>
      <url>/pages/hexo/error-spawn-failed.html</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://img-blog.csdnimg.cn/f1adf491ec514261b308b4c757f2d8de.png"></h2><h2 id="方法1、修改配置"><a href="#方法1、修改配置" class="headerlink" title="方法1、修改配置"></a>方法1、修改配置</h2><ul><li>打开博客主目录配置文件 <code>__config.yml</code></li><li>修改 <code>deploy.repo</code> 为如下格式：<ul><li><code>git@github.com:{用户名}/{用户名}.github.io</code></li></ul><p> </p></li><li>重新执行<code>hexo clean</code> <code>hexo g</code> <code>hexo d</code><br><img src="https://img-blog.csdnimg.cn/f1adf491ec514261b308b4c757f2d8de.png"></li></ul><hr><h2 id="方法2、删除-deplot-git文件夹"><a href="#方法2、删除-deplot-git文件夹" class="headerlink" title="方法2、删除.deplot_git文件夹"></a>方法2、删除<code>.deplot_git</code>文件夹</h2><ul><li>删除<code>.deplot_git</code>文件夹</li><li><strong>git bash</strong> 中 <code>git config --global core.autocrlf false</code></li><li>重新执行<code>hexo clean</code> <code>hexo g</code> <code>hexo d</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 配置 </tag>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一个油猴脚本</title>
      <link href="/pages/tempermonkey/doc-and-first.html"/>
      <url>/pages/tempermonkey/doc-and-first.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/f38bf1b90fdc47d6bac61b61097a0864.png"></p><hr><h2 id="0、油猴官方文档"><a href="#0、油猴官方文档" class="headerlink" title="0、油猴官方文档"></a>0、油猴官方文档</h2><blockquote><p><a href="https://www.tampermonkey.net/documentation.php">https://www.tampermonkey.net/documentation.php</a><br>主要有：脚本文件头的一些说明；油猴官方接口使用说明。<br><img src="https://img-blog.csdnimg.cn/b4a1b6d93f70419683fc591f5c741ef3.png"></p></blockquote><h2 id="1、开始编写"><a href="#1、开始编写" class="headerlink" title="1、开始编写"></a>1、开始编写</h2><h3 id="1-0-需求"><a href="#1-0-需求" class="headerlink" title="1-0 需求"></a>1-0 需求</h3><p>由于一些原因，需要从浏览器中获取到公众号文章的封面链接；以往都是<code>Ctrl + U --&gt; Ctrl + F</code>，然后查找封面链接，步骤较为繁琐。就希望能够写个脚本，能够自动筛选出当前微信文章的封面链接，并在页面中展示（方便复制），或者增加一按钮，点击就可以复制链接。</p><h3 id="1-1-文件头"><a href="#1-1-文件头" class="headerlink" title="1-1 文件头"></a>1-1 文件头</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// ==UserScript==</span><span class="token comment">// @name         公众号封面获取</span><span class="token comment">// @namespace    http://tampermonkey.net/</span><span class="token comment">// @version      0.1</span><span class="token comment">// @description  简单的公众号封面获取脚本</span><span class="token comment">// @author       pxoxq</span><span class="token comment">// @match        https://mp.weixin.qq.com/*</span><span class="token comment">// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=tampermonkey.net</span><span class="token comment">// @grant        GM_setClipboard</span><span class="token comment">// @require      https://lib.sinaapp.com/js/jquery/3.1.0/jquery-3.1.0.min.js</span><span class="token comment">// ==/UserScript==</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>name</code>：脚本名称</li><li><code>description</code>：对脚本的简单描述</li><li><code>author</code>：作者</li><li><code>match</code>：需要运行脚本的网站地址模板</li><li><code>icon</code>：脚本图标</li><li><code>grant</code>：用于将 GM_* 函数、unsafeWindow 对象和一些强大的窗口函数列入白名单。【这里引入了油猴的一个复制到剪切板的接口】</li><li><code>require</code>：引入一些依赖的 JavaScript 文件。【这里我引入了一个jquery】</li></ul><h3 id="1-2-代码"><a href="#1-2-代码" class="headerlink" title="1-2 代码"></a>1-2 代码</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">copyit</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token function">GM_setClipboard</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'已复制到剪贴板'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token string">'use strict'</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token comment">// 找到页面标题，后续将链接和按钮添加到标题下边</span>    <span class="token keyword">let</span> top <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.rich_media_title'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 获取整个页面代码（简单粗暴）</span>    <span class="token keyword">let</span> root<span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>outerHTML    <span class="token comment">// 这是文章封面链接的正则表达式</span>    <span class="token keyword">let</span> ptn <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">cdn_url_235_1 = "(.+)"</span><span class="token regex-delimiter">/</span></span>    <span class="token comment">// 匹配，得到结果</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>ptn<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建一个div标签来存放需要新增到页面的元素</span>    <span class="token keyword">let</span> show <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    show<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;textarea class='f_url' readonly&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/textarea&gt;    &lt;button id='wula'&gt;复 制&lt;/button&gt;    &lt;style&gt;.f_url{        width:70%;        padding: 6px;        height: 3em;        margin: 10px auto;        margin-bottom: 0;        border-radius: 10px;        border: 2px solid #3BCEB366;    }#wula{padding: 8px 20px; border: 2px solid #5AD74E44;background: #2CC2D544;}&lt;/style&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token comment">// 将链接展示块元素，添加到标题下边</span>    top<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>show<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 按钮绑定点击事件</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#wula'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>    <span class="token function">copyit</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">// Your code here...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-实现效果"><a href="#1-3-实现效果" class="headerlink" title="1-3 实现效果"></a>1-3 实现效果</h3><p><img src="https://img-blog.csdnimg.cn/a5dadf53a97943b8b534ad026a0a7374.png"></p>]]></content>
      
      
      <categories>
          
          <category> tempermonkey </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tempermonkey </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode配置用户代码片段+相关内置变量整理</title>
      <link href="/pages/vscode/user-snippets.html"/>
      <url>/pages/vscode/user-snippets.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、配置流程"><a href="#一、配置流程" class="headerlink" title="一、配置流程"></a>一、配置流程</h2><ol><li>设置 ==》 配置用户代码片段<br><img src="https://img-blog.csdnimg.cn/d69d3b0cf80d4dd99836a67b5fdf9eb3.png"></li><li>选择代码片段文件或创建代码片段</li></ol><ul><li>全局代码片段：<ul><li>顾名思义，全局生效；</li><li>一般步骤：–&gt; 配置文件名 –&gt; 具体配置</li></ul></li><li>文件夹下代码片段<ul><li>仅在改文件夹下生效</li><li>一般步骤：同全局</li></ul></li><li>其余为按文件件类型进行配置<ul><li>一般步骤：选择对应的语言–&gt;具体配置</li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/e650f519da8b4f8b9be37c926b90bdcb.png"></p><ol start="3"><li>具体配置：<blockquote><p>这里以创建的一个全局代码片段（markdown文件生效）为例：</p></blockquote></li></ol><ul><li>body说明：<ul><li>值可以是列表，每一个元素为一行</li><li>$1 代表插入后光标的第一个位置，以此类推</li><li>$0 代表光标最后的位置<ul><li>如图中设置了四个光标位置，自动插入后先到第一个位置，然后输入title内容，按下<code>Tab</code>后切换到$2……</li></ul></li><li><code>$CURRENT_YEAR</code>……等属于内置变量，具体参考下文</li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/9075ce120c1e4603bc558fb2d8d252cc.png"><br>5. 于是，在新新建的 .md 文档中，输入 <code>tt</code> 后敲回车，就可以自动插入内容：</p><ul><li>注意看之前配置的四个光标位置。</li></ul><p><img src="https://img-blog.csdnimg.cn/83e39ab95f1d4a6e9e4df8f4aeee6eda.png"></p><p><img src="https://img-blog.csdnimg.cn/e602036d3b0a4291b775f4a0985706f7.png"></p><blockquote><p>其他语言、其他结构，就以此类推，自由发挥啦。</p></blockquote><hr><h2 id="二、内置变量梳理"><a href="#二、内置变量梳理" class="headerlink" title="二、内置变量梳理"></a>二、内置变量梳理</h2><ul><li>官方文档：<ul><li><a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets">https://code.visualstudio.com/docs/editor/userdefinedsnippets</a></li></ul></li></ul><p><code>TM_SELECTED_TEXT</code> 当前选中的文本或空字符串<br><code>TM_CURRENT_LINE</code> 当前行的内容<br><code>TM_CURRENT_WORD</code> 光标下单词的内容或空字符串<br><code>TM_LINE_INDEX</code> 基于零索引的行号<br><code>TM_LINE_NUMBER</code> 基于单索引的行号<br><code>TM_FILENAME</code> 当前文档的文件名<br><code>TM_FILENAME_BASE</code> 当前文档的文件名，不带扩展名<br><code>TM_DIRECTORY</code> 当前文档的目录<br><code>TM_FILEPATH</code> 当前文档的完整文件路径<br><code>RELATIVE_FILEPATH</code> 当前文档的相对（相对于打开的工作区或文件夹）文件路径<br><code>CLIPBOARD</code> 剪贴板的内容<br><code>WORKSPACE_NAME</code> 打开的工作区或文件夹的名称<br><code>WORKSPACE_FOLDER</code> 打开的工作空间或文件夹的路径<br><code>CURSOR_INDEX</code> 基于零索引的游标号<br><code>CURSOR_NUMBER</code> 基于单索引的游标号</p><p>插入当前日期和时间：<br><code>CURRENT_YEAR</code> 本年度<br><code>CURRENT_YEAR_SHORT</code> 本年度的最后两位数<br><code>CURRENT_MONTH</code> 两位数的月份（例如“02”）<br><code>CURRENT_MONTH_NAME</code> 月份的全名（例如“七月”）<br><code>CURRENT_MONTH_NAME_SHORT</code> 月份的简称（例如“Jul”）<br><code>CURRENT_DATE</code> 两位数的月份日期（例如“08”）<br><code>CURRENT_DAY_NAME</code> 日期名称（例如“星期一”）<br><code>CURRENT_DAY_NAME_SHORT</code> 当天的简称（例如“周一”）<br><code>CURRENT_HOUR24</code>  小时制格式的当前小时<br><code>CURRENT_MINUTE</code> 当前分钟为两位数<br><code>CURRENT_SECOND</code> 当前秒为两位数<br><code>CURRENT_SECONDS_UNIX</code> 自 Unix 纪元以来的秒数</p><p>对于插入随机值：<br><code>RANDOM6</code>  个随机 Base-10 数字<br><code>RANDOM_HEX6</code>  个随机 Base-16 位<br><code>UUID</code> 版本 4 UUID</p><p>对于插入行或块注释，尊重当前语言：<br><code>BLOCK_COMMENT_START</code> 示例输出：PHP<code>/*</code>或 HTML<code>&lt;!--</code><br><code>BLOCK_COMMENT_END</code>  示例输出：PHP<code>*/</code>或 HTML<code>--&gt;</code><br><code>LINE_COMMENT</code> 示例输出：在 PHP 中<code>//</code></p>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> vscode </tag>
            
            <tag> 快速开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo自定义文章访问链接格式</title>
      <link href="/pages/hexo/confurl.html"/>
      <url>/pages/hexo/confurl.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/2b65092fb6e64937a22f462e26226fc9.png"></p><hr><h2 id="为啥要改嘞？"><a href="#为啥要改嘞？" class="headerlink" title="为啥要改嘞？"></a>为啥要改嘞？</h2><blockquote><p>默认的文章访问链路径，应该是这样的：<code>2022/09/16/子文件夹/文章标题</code>，完整链接类似：<code>https://pxoxq.github.io/2022/09/16/python/use-pymongo</code>。这种默认风格的话，很清楚的展示了文章的写作日期、子文件夹信息等。</p><blockquote><p>其实访问路径的配置，跟生成的静态文件挂钩，如果配置成这样的“日期、文件名类型”最终生成静态页面时，也会按照这样的规则生成对应的文件目录，例如：<code>2022/09/16/子文件夹/文章标题/index.html</code>。【这个是题外话，静态文件怎么样分布，其实并不影响】</p></blockquote><p>个人来说，不太喜欢这样的风格，一串数字在路径里。比较理想的风格是：<code>类别/文章标题</code>，例如：<code>python/use-pymongo</code>，为了不跟其他导航界面冲突，再在开头加个<code>pages</code>，<code>pages/python/use-pymongo</code>.</p></blockquote><ul><li>说到底，就是不喜欢默认风格的文章访问路径的格式。<br><font color="red">×</font> <code>https://pxoxq.github.io/2022/09/16/python/use-pymongo</code><br><font color="green">√</font> <code>https://pxoxq.github.io/pages/python/use-pymongo</code></li></ul><h2 id="一、配置项介绍"><a href="#一、配置项介绍" class="headerlink" title="一、配置项介绍"></a>一、配置项介绍</h2><blockquote><p>参考官方网址：<a href="https://hexo.io/zh-cn/docs/configuration#%E7%BD%91%E5%9D%80">https://hexo.io/zh-cn/docs/configuration#%E7%BD%91%E5%9D%80</a></p><blockquote><p>主要参考： 网址、永久链接两个模块</p></blockquote></blockquote><h3 id="1-1-官网说明"><a href="#1-1-官网说明" class="headerlink" title="1-1 官网说明"></a>1-1 官网说明</h3><p><img src="https://img-blog.csdnimg.cn/27e5a1222f0e4ea6bc758b9c9cee16ce.png"></p><h3 id="1-2-一些常用的变量"><a href="#1-2-一些常用的变量" class="headerlink" title="1-2 一些常用的变量"></a>1-2 一些常用的变量</h3><p><span id="b"></span><br><img src="https://img-blog.csdnimg.cn/894c0e0f660c407d904a3dd955e60bd8.png"></p><h2 id="二、具体配置"><a href="#二、具体配置" class="headerlink" title="二、具体配置"></a>二、具体配置</h2><h3 id="2-1-url"><a href="#2-1-url" class="headerlink" title="2-1 url"></a>2-1 url</h3><p>我的是部署到Github上，所以此处配置的就是Github主页的默认地址：<code>https://pxoxq.github.io</code></p><h3 id="2-2-permalink-pretty-urls-trailing-html"><a href="#2-2-permalink-pretty-urls-trailing-html" class="headerlink" title="2-2 permalink + pretty_urls.trailing_html"></a>2-2 permalink + pretty_urls.trailing_html</h3><ul><li>permalink:<ul><li>文章链接格式，也就是 文章访问链接 的模板：</li><li>变量的话可以参考第一部分的内容。<a href="#b">变量</a></li><li>我的配置是：<code>pages/:category/:name.html</code><br>   简单说明一下 :带个前缀 pages；类别/文件名。</li></ul></li><li>pretty_urls.trailing_html<ul><li>配置为<code>false</code>去除链接尾部的 <code>.html</code></li></ul></li></ul><hr><p>这么一波配置，分类为<code>Git</code>文件名为<code>gitcz.md</code>的文章访问链接就如下图所示：<br><br><img src="https://img-blog.csdnimg.cn/806c7a7136d3497c84dade3a0ade91d9.png"></p><h2 id="三、文档目录具体对应【更直观】"><a href="#三、文档目录具体对应【更直观】" class="headerlink" title="三、文档目录具体对应【更直观】"></a>三、文档目录具体对应【更直观】</h2><h3 id="3-1-原-md-文章"><a href="#3-1-原-md-文章" class="headerlink" title="3-1 原 .md 文章"></a>3-1 原 .md 文章</h3><ul><li>文章都放在 <code>_post</code>目录下</li><li>因为配置 <code>permalink</code>时，只用到文件名，所以<code>_post</code>下的子目录并不影响最终生成的静态文件的具体分布。</li><li>注意文件头的<code>categories</code>项，对应<code>:category</code>变量。<ul><li>如果地址处配置了该变量，那么写文章时，注意<code>categories</code>设置为单值。</li><li>也就是说，一篇文章只有一个分类，如果想有多个标识，那么可以配置到 <code>tags</code>标签项，为文章添加多个标签。</li></ul></li><li><img src="https://img-blog.csdnimg.cn/7b9567f92e844fb19414f4b684ab26e4.png"></li></ul><h3 id="3-2-html-静态页面"><a href="#3-2-html-静态页面" class="headerlink" title="3-2 .html 静态页面"></a>3-2 .html 静态页面</h3><ul><li><code>hexo g</code> 以后生成的静态目录如下</li><li>可见按配置生成了 <code>pages/类别/文章名.html</code> 的静态文件</li><li>最终部署到Github，就是按着这个目录进行访问。<br><img src="https://img-blog.csdnimg.cn/d1d82763af1c4c08bd09e39354499300.png"></li></ul><h2 id="四、小技巧分享"><a href="#四、小技巧分享" class="headerlink" title="四、小技巧分享"></a>四、小技巧分享</h2><ul><li>VSCode <code>md</code> 文档文件头用户代码片段配置：</li></ul><ol><li>设置 ==》 配置用户代码片段<br><img src="https://img-blog.csdnimg.cn/d69d3b0cf80d4dd99836a67b5fdf9eb3.png"></li><li>选择全局或者是该文件夹下的代码片段<blockquote><p>Blog文件夹下的就是我的博客主页工程文件</p></blockquote></li></ol><p><img src="https://img-blog.csdnimg.cn/e650f519da8b4f8b9be37c926b90bdcb.png"></p><ol start="3"><li>给改片段起个名<blockquote><p>可以设置一个可读性ok的名字，例如：hexo_md_head</p></blockquote></li></ol><p><img src="https://img-blog.csdnimg.cn/9760ef5c253a4837ba0b2f1df2691c5c.png"></p><ol start="4"><li>具体配置：</li></ol><ul><li>body说明：<ul><li>值可以是列表，每一个元素为一行</li><li>$1 代表插入后光标的第一个位置，以此类推</li><li>$0 代表光标最后的位置<ul><li>如图中设置了四个光标位置，自动插入后先到第一个位置，然后输入title内容，按下<code>Tab</code>后切换到$2……</li></ul></li><li>$CURRENT_YEAR……等属于内置变量，具体参考<ul><li>官网（外网）：<a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets">https://code.visualstudio.com/docs/editor/userdefinedsnippets</a></li><li>或者这里（CSDN文章）：<a href="https://blog.csdn.net/qq_45020818/article/details/126896904">https://blog.csdn.net/qq_45020818/article/details/126896904</a></li></ul></li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/9075ce120c1e4603bc558fb2d8d252cc.png"><br>5. 于是，在新新建的 .md 文档中，输入 <code>tt</code> 后敲回车，就可以自动插入内容：</p><ul><li>注意看之前配置的四个光标位置。</li></ul><p><img src="https://img-blog.csdnimg.cn/83e39ab95f1d4a6e9e4df8f4aeee6eda.png"></p><p><img src="https://img-blog.csdnimg.cn/e602036d3b0a4291b775f4a0985706f7.png"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+Github 快速搭建个人博客</title>
      <link href="/pages/hexo/basicuse.html"/>
      <url>/pages/hexo/basicuse.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、提前准备"><a href="#一、提前准备" class="headerlink" title="一、提前准备"></a>一、提前准备</h2><h3 id="1-1、安装Git"><a href="#1-1、安装Git" class="headerlink" title="1-1、安装Git"></a>1-1、安装Git</h3><ul><li>Git官方下载地址：<ul><li><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li></ul></li><li>安装<ul><li>直接一路确认无脑安装。</li><li>或者，参考这篇文章：<ul><li><a href="https://blog.csdn.net/mukes/article/details/115693833">Git 详细安装教程（详解 Git 安装过程的每一个步骤）</a></li><li><a href="https://blog.csdn.net/mukes/article/details/115693833">https://blog.csdn.net/mukes/article/details/115693833</a></li></ul></li></ul></li></ul><h3 id="1-2、安装Nodejs"><a href="#1-2、安装Nodejs" class="headerlink" title="1-2、安装Nodejs"></a>1-2、安装Nodejs</h3><ul><li>官方下载地址：<ul><li><a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></li></ul></li><li>安装(参考一个就行)：<ul><li>Nodejs 安装与踩坑 <ul><li><a href="https://pxoxq.github.io/pages/nodejs/install">https://pxoxq.github.io/pages/nodejs/install</a></li></ul></li><li>Nodejs安装与环境配置<ul><li><a href="https://blog.csdn.net/qq_43557395/article/details/124325563">https://blog.csdn.net/qq_43557395/article/details/124325563</a></li></ul></li></ul></li></ul><h3 id="1-3、注册Github账号"><a href="#1-3、注册Github账号" class="headerlink" title="1-3、注册Github账号"></a>1-3、注册Github账号</h3><ul><li>Github 官方地址<ul><li><a href="https://github.com/">https://github.com/</a></li></ul></li><li>注册账号：<ul><li>照着提示注册就行</li></ul></li></ul><hr><h2 id="二、安装Hexo、部署到Github仓库"><a href="#二、安装Hexo、部署到Github仓库" class="headerlink" title="二、安装Hexo、部署到Github仓库"></a>二、安装Hexo、部署到Github仓库</h2><h3 id="2-1、安装、初始化Hexo"><a href="#2-1、安装、初始化Hexo" class="headerlink" title="2-1、安装、初始化Hexo"></a>2-1、安装、初始化Hexo</h3><ul><li>在一个选定目录，新建 <code>Blog</code> 文件夹。（其它名也行）</li><li>进入到该文件夹，打开命令行<ul><li>执行 <code>npm install -g hexo-cli</code> 命令，安装hexo；</li><li>执行 <code>hexo init</code> 命令初始化。<br>  于是在Blog下生成如下目录：<br>  <img src="https://img-blog.csdnimg.cn/f871a0046ce643619bb115cdead4aa91.png"></li><li>执行 <code>hexo s</code> 或是 <code>hexo serve</code><br>  <img src="https://img-blog.csdnimg.cn/ce4fed6c04c84272a723167390dfba7b.png"><br>  便可以在浏览器打开红框中网址，看到博客已经（初步）搭建完成！<br><img src="https://img-blog.csdnimg.cn/55fc5e462a8e4608be01f610e0e884cf.png"></li></ul></li></ul><hr><ul><li><strong>对生成目录的重要部分进行说明</strong>：<ul><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul></li></ul><h3 id="2-2、新建GitHub仓库"><a href="#2-2、新建GitHub仓库" class="headerlink" title="2-2、新建GitHub仓库"></a>2-2、新建GitHub仓库</h3><ul><li>登录Github，点击头像旁边的<code>“+”</code> ==》 <code>new repository</code> </li><li>输入仓库名称，及其他配置<ul><li>命名格式：<code>{用户名}.github.io</code>  <font color="red">严格遵守</font></li><li>注意下图三个地方</li><li>确认无误后，创建仓库<br><img src="https://img-blog.csdnimg.cn/2486b670bd1a4a3fb7cc1ba2c15bb39c.png"></li></ul></li><li>配置<code>Blog</code>文件夹下的<code>_config.yml</code>文件<br><img src="https://img-blog.csdnimg.cn/3169f626508b4e3888a046a6fe6dd8b7.png"></li></ul><h3 id="2-3、部署到Github"><a href="#2-3、部署到Github" class="headerlink" title="2-3、部署到Github"></a>2-3、部署到Github</h3><ul><li>安装部署所需组件：<ul><li>在<code>Blog</code> 目录下，打开命令行，执行：</li><li><code>npm i --save hexo-deployer-git</code></li></ul></li><li>在<code>Blog</code> 目录下，打开命令行，依次执行如下命令：<ul><li><code>hexo clean</code>   清除静态文件</li><li><code>hexo g</code>     生成静态文件（页面）</li><li><code>hexo d</code>     部署到Github</li></ul></li><li>访问：<ul><li>部署后，便可以通过：</li><li><code>https://{用户名}.github.io</code> 进行访问</li><li>例如： <a href="https://pxoxq.github.io/">https://pxoxq.github.io</a></li></ul></li></ul><h3 id="2-4、新建文章"><a href="#2-4、新建文章" class="headerlink" title="2-4、新建文章"></a>2-4、新建文章</h3><blockquote><p>文章存储在 <code>Blog/source/_posts/</code> 路径下。</p><ul><li>可以在该目录下直接新建 <code>.md</code> 文件，用<code>markdown</code>语法写文章。</li><li>也可以在改目录下，嵌套子目录，再在子目录新建文章。</li><li>hexo会自动识别到新增的文章。</li></ul></blockquote><h2 id="三、整体配置、主题安装"><a href="#三、整体配置、主题安装" class="headerlink" title="三、整体配置、主题安装"></a>三、整体配置、主题安装</h2><h3 id="3-1、Hexo整体配置"><a href="#3-1、Hexo整体配置" class="headerlink" title="3-1、Hexo整体配置"></a>3-1、Hexo整体配置</h3><ul><li>在 <code>Blog/__config.yml</code> 文件中进行</li><li>主要配置网站的一些基础信息：<ul><li>网站标题</li><li>网站部署的Github仓库（之前配置过）</li><li>所用到的主题</li><li>……</li></ul></li><li>具体参考官方文档：<ul><li><a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a>  <blockquote><p>其实也就是主要配置一下所列举的那几项，其他的话看个人需求，不配置也不是很影响。</p></blockquote></li></ul></li></ul><h3 id="3-2、安装主题"><a href="#3-2、安装主题" class="headerlink" title="3-2、安装主题"></a>3-2、安装主题</h3><blockquote><p>为什么需要主题呢？就初始化后看到的网页吧，整体比较质朴，低情商：比较丑。<br>通过安装主题，可以直接套用一些大佬的优秀模板，实现更好的视觉效果、文章编辑体验。<br><img src="https://img-blog.csdnimg.cn/bc406dd8314640ffa64152005112154d.png"></p></blockquote><h4 id="A、寻找、安装主题"><a href="#A、寻找、安装主题" class="headerlink" title="A、寻找、安装主题"></a>A、寻找、安装主题</h4><ul><li>直接在 Github 搜索 <code>hexo-theme</code><br><img src="https://img-blog.csdnimg.cn/a67fbdc45e7b4dac87eced7e34abb4d5.png"></li><li>可以点开到主页预览，选择一个自己喜欢的风格，这里以我使用的 <code>matery</code> 为例。【也比较推荐，还是挺好看的】<ul><li>直接下载源代码<br>   <img src="https://img-blog.csdnimg.cn/ecbaf210b3c541bfb031dfadef9d00b8.png"></li><li>解压后得到这堆东西<br>   <img src="https://img-blog.csdnimg.cn/3bc4fd2ec66c4dbc931fd5fa24be13c9.png"></li><li>在 <code>Blog/themes</code> 新建 <code>matery</code> 文件夹，把这堆粘贴进去。</li></ul></li></ul><h4 id="B、配置主题、测试"><a href="#B、配置主题、测试" class="headerlink" title="B、配置主题、测试"></a>B、配置主题、测试</h4><ul><li>在<code>Blog</code>目录下的 <code>_config.yml</code> 文件中配置使用的主题<br><img src="https://img-blog.csdnimg.cn/aa22bb15028e4a5f89a6f9be5bbb2ab9.png"></li><li>测试【之后更新内容也都可以通过这一套连招，更新网站内容】<ul><li><code>hexo clean</code></li><li><code>hexo g</code></li><li><code>hexo d</code></li><li>打开github.io 那个网站，刷新，查看效果。</li></ul></li></ul><hr><blockquote><p>主题也可以进行很多的配置，从而更加个性化，更加符合你的使用习惯</p></blockquote><ul><li>主题的配置文件在： <code>Blog/themes/matery/__config.yml</code> </li><li>详细的配置参考官方文档：<ul><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></li><li>建议顺着文档，都自行配置一下。【能更了解这个主题有些什么更功能模块可以用】<blockquote><p>文档很详细，很通俗易懂，建议顺着这个文档配置一下。文档中不仅包含了对网站模块的定制化修改，还包含了许多使用技巧：评论模块的配置、emoji表情的配置、访问量统计插件的引用……<br>操作也很简单、顺着配置一遍，也基本能的到一个比较满意的个人博客啦！</p></blockquote></li></ul></li></ul><hr><ul><li>最后，这是我搭建的个人博客 <a href="https://pxoxq.github.io/">https://pxoxq.github.io</a>，用的是文中推荐的主题。</li><li>后续，打算再记录一些 hexo中文章撰写技巧、一些好用的插件、配置细节等等。</li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 中引入Druid监控</title>
      <link href="/pages/springboot/use-druid.html"/>
      <url>/pages/springboot/use-druid.html</url>
      
        <content type="html"><![CDATA[<div class="admonition note"><p class="admonition-title">说明</p><p>这只是最基础的引入、使用，更详细的使用还请具体参考 官方GitHub主页。Druid 真的牛<span class="github-emoji"><span>🍻</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p></div><h2 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h2><ul><li><code>xxxx/druid/</code></li></ul><h2 id="0、官方地址"><a href="#0、官方地址" class="headerlink" title="0、官方地址"></a>0、官方地址</h2><ul><li><a href="https://github.com/alibaba/druid">https://github.com/alibaba/druid</a></li></ul><h2 id="1、引入依赖、配置数据源"><a href="#1、引入依赖、配置数据源" class="headerlink" title="1、引入依赖、配置数据源"></a>1、引入依赖、配置数据源</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/<span class="token punctuation">{</span>写你自己的数据链接吧哈哈哈<span class="token punctuation">}</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> xxxxxx    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、yaml详细配置"><a href="#2、yaml详细配置" class="headerlink" title="2、yaml详细配置"></a>2、yaml详细配置</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">druid</span><span class="token punctuation">:</span>  <span class="token key atrule">aop-patterns</span><span class="token punctuation">:</span> com.xueou.boot.*  <span class="token comment">#spring bean 监控</span>  <span class="token key atrule">filters</span><span class="token punctuation">:</span> stat<span class="token punctuation">,</span>wall<span class="token punctuation">,</span>slf4j  <span class="token key atrule">max-active</span><span class="token punctuation">:</span> <span class="token number">12</span>  <span class="token key atrule">stat-view-servlet</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment">## 登陆账号密码</span>    <span class="token key atrule">login-username</span><span class="token punctuation">:</span> pxoxq    <span class="token key atrule">login-password</span><span class="token punctuation">:</span> password    <span class="token key atrule">reset-enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">web-stat-filter</span><span class="token punctuation">:</span> <span class="token comment">## web监控</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">url-pattern</span><span class="token punctuation">:</span> /*    <span class="token key atrule">exclusions</span><span class="token punctuation">:</span> <span class="token string">'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'</span>  <span class="token key atrule">filter</span><span class="token punctuation">:</span>    <span class="token key atrule">stat</span><span class="token punctuation">:</span> <span class="token comment">#sql监控</span>      <span class="token comment">## 慢查询时间阈值</span>      <span class="token key atrule">slow-sql-millis</span><span class="token punctuation">:</span> <span class="token number">1000</span>      <span class="token key atrule">logSlowSql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">wall</span><span class="token punctuation">:</span> <span class="token comment">#防火墙</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">config</span><span class="token punctuation">:</span>        <span class="token key atrule">drop-table-allow</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
            <tag> Druid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda常用指令与配置</title>
      <link href="/pages/python/useanaconda.html"/>
      <url>/pages/python/useanaconda.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-包管理"><a href="#1-包管理" class="headerlink" title="-1 包管理"></a>-1 包管理</h2><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">conda list　　　　　　　　　　　　　　查看当前环境下已安装的包conda list -n py27　　　　　　　　　 查看指定环境的已安装的包conda search selenium　　　　　　　 查找package信息conda install -n py27 selenium  指定环境安装package，不加-n则安装在当前活跃环境conda update -n py27 selenium   指定环境更新package，不加-n则更新在当前活跃环境conda remove -n py27 selenium   删除package，不加-n则删除在当前活跃环境conda clean --all               清理（应该是pkgs文件下的）安装包缓存conda update conda  　 更新condaconda update anaconda  更新anacondaconda update python   更新python，假设当前环境是3.6，则更新3.6.x系列版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0-展示配置"><a href="#0-展示配置" class="headerlink" title="0 展示配置"></a>0 展示配置</h2><pre class="line-numbers language-none"><code class="language-none">conda config --show <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-换源-清华"><a href="#1-换源-清华" class="headerlink" title="1 换源(清华)"></a>1 换源(清华)</h2><pre class="line-numbers language-none"><code class="language-none">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud//pytorch/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/conda config --set show_channel_urls yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-查看安装源"><a href="#2-查看安装源" class="headerlink" title="2 查看安装源"></a>2 查看安装源</h2><pre class="line-numbers language-none"><code class="language-none">conda config --show channels<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-清除某个源"><a href="#3-清除某个源" class="headerlink" title="3 清除某个源"></a>3 清除某个源</h2><pre class="line-numbers language-none"><code class="language-none">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-查看当前环境信息"><a href="#4-查看当前环境信息" class="headerlink" title="4 查看当前环境信息"></a>4 查看当前环境信息</h2><pre class="line-numbers language-none"><code class="language-none">conda info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-查看所有已创建的虚拟环境"><a href="#5-查看所有已创建的虚拟环境" class="headerlink" title="5 查看所有已创建的虚拟环境"></a>5 查看所有已创建的虚拟环境</h2><pre class="line-numbers language-none"><code class="language-none">conda info -e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-切换到虚拟环境-xx"><a href="#6-切换到虚拟环境-xx" class="headerlink" title="6 切换到虚拟环境 xx"></a>6 切换到虚拟环境 xx</h2><pre class="line-numbers language-none"><code class="language-none">conda activate xx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7-32-amp-64-位切换"><a href="#7-32-amp-64-位切换" class="headerlink" title="7  32 &amp; 64 位切换"></a>7  32 &amp; 64 位切换</h2><pre class="line-numbers language-none"><code class="language-none">set CONDA_FORCE_32BIT=1 ## 切换到32位set CONDA_FORCE_32BIT=0 ## 切换到64位<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="8-创建一个python2-7-名为xxx的虚拟环境"><a href="#8-创建一个python2-7-名为xxx的虚拟环境" class="headerlink" title="8 创建一个python2.7 名为xxx的虚拟环境"></a>8 创建一个python2.7 名为xxx的虚拟环境</h2><pre class="line-numbers language-none"><code class="language-none">conda create -n xxx python=2.7 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如要创建32位的python环境，先设置为32位在创建环境，这样创建好的环境即为32位的Python环境</p></blockquote><h2 id="9-移除环境"><a href="#9-移除环境" class="headerlink" title="9 移除环境"></a>9 移除环境</h2><pre class="line-numbers language-none"><code class="language-none">conda remove -n env_name --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="10-修改配置语法"><a href="#10-修改配置语法" class="headerlink" title="10 修改配置语法"></a>10 修改配置语法</h2><pre class="line-numbers language-none"><code class="language-none">conda config --add key value #添加语法,可以调整路径顺序conda config --remove key value #删除语法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>添加、修改 <code>envs_dirs</code>:<pre class="line-numbers language-none"><code class="language-none">conda config --add envs_dirs your_dirconda config --remove envs_dirs your_dir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="11-修改配置文件"><a href="#11-修改配置文件" class="headerlink" title="11 修改配置文件"></a>11 修改配置文件</h2><blockquote><p>1）直接修改配置文件</p></blockquote><p>修改用户路径下的 <code>.condarc</code> 文件。一般在 <code>C:\Users\用户\.condarc</code>。具体配置是==去掉注释==</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">## 这个是镜像配置</span><span class="token key atrule">channels</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda<span class="token punctuation">-</span>forge/  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/  <span class="token punctuation">-</span> defaults<span class="token key atrule">show_channel_urls</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment">## 环境存放地址</span><span class="token key atrule">envs_dirs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> D<span class="token punctuation">:</span>\Anaconda3\envs<span class="token comment">## 包（库）存放地址</span><span class="token key atrule">pkgs_dirs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> D<span class="token punctuation">:</span>\Anaconda3\pkgs  <span class="token punctuation">-</span> C<span class="token punctuation">:</span>\Users\dell\AppData\Local\conda\conda\envs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>2）通过Anaconda Navigator修改</p></blockquote><ul><li>打开 Anaconda Navigator</li><li>Ctrl + P</li><li>Configure Conda</li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指令 </tag>
            
            <tag> python </tag>
            
            <tag> anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中MongoDB的使用</title>
      <link href="/pages/db/usepymongo.html"/>
      <url>/pages/db/usepymongo.html</url>
      
        <content type="html"><![CDATA[<p><span id="list"></span><br>[toc]</p><hr><h2 id="常用方法-表格"><a href="#常用方法-表格" class="headerlink" title="常用方法 表格"></a>常用方法 表格</h2><table><thead><tr><th align="left">使用</th><th align="left">语法</th></tr></thead><tbody><tr><td align="left">连接</td><td align="left">pymongo.MongoClient(host, port, safe=False)</td></tr><tr><td align="left">创建数据库、创建集合</td><td align="left">client.db_name/client[dbname]、db[clc_name]</td></tr><tr><td align="left">向集合中插入文档（数据）</td><td align="left">insert_one(dict) 、insert_many(list_of_dict)</td></tr><tr><td align="left">查找、遍历数据</td><td align="left">clc.find_one(filter)、clc.find(filter)</td></tr><tr><td align="left">对文档中字段基础操作【增、改、删】</td><td align="left">update_one(filter, update) / update_many(filter, update)</td></tr><tr><td align="left">删除文档</td><td align="left">delete_one(filter)、delete_many(filter)</td></tr><tr><td align="left">关闭连接</td><td align="left">client.close()</td></tr></tbody></table><table><thead><tr><th>update</th><th>说明</th></tr></thead><tbody><tr><td>filter参数</td><td>{key: value} 用于定位到目标文档</td></tr><tr><td>update参数</td><td>{command: {key: value}}</td></tr></tbody></table><hr><h2 id="连接-MongoClient-host-port-safe"><a href="#连接-MongoClient-host-port-safe" class="headerlink" title="连接 MongoClient(host, port, safe)"></a>连接 MongoClient(host, port, safe)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymongohost <span class="token operator">=</span> <span class="token string">'localhost'</span>port <span class="token operator">=</span> <span class="token number">27017</span>client <span class="token operator">=</span> pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span>host<span class="token operator">=</span>host<span class="token punctuation">,</span> port<span class="token operator">=</span>port<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>语法:</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> safe<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>safe:会降低效率【True】主要是有个16Mb的限制——-果然是一句自己才能听懂的话</p></blockquote><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="创建数据库、集合"><a href="#创建数据库、集合" class="headerlink" title="创建数据库、集合"></a>创建数据库、集合</h2><h3 id="连接-x2F-创建数据库"><a href="#连接-x2F-创建数据库" class="headerlink" title="连接 / 创建数据库"></a>连接 / 创建数据库</h3><ul><li><p><input disabled="" type="checkbox"> <code>client['one_db'] / client.one_db</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">db <span class="token operator">=</span> client<span class="token punctuation">[</span><span class="token string">'firet_db'</span><span class="token punctuation">]</span><span class="token comment">## 或者 </span>db <span class="token operator">=</span> client<span class="token punctuation">.</span>first_db<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><input checked="" disabled="" type="checkbox"> 如果数据库存在，那么进行连接；如果不存在，那么创建并连接  【两种方法等价】</p></li></ul><hr><h3 id="连接-x2F-创建集合"><a href="#连接-x2F-创建集合" class="headerlink" title="连接 / 创建集合"></a>连接 / 创建集合</h3><ul><li><input disabled="" type="checkbox"> <code>db[collection_name]</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">collection <span class="token operator">=</span> db<span class="token punctuation">[</span><span class="token string">'lmao'</span><span class="token punctuation">]</span><span class="token comment">## collection = db[collection_name]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><input checked="" disabled="" type="checkbox"> 如果集合存在，那么进行连接；如果不存在，那么创建并连接</li></ul><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="向集合中插入文件（数据）"><a href="#向集合中插入文件（数据）" class="headerlink" title="向集合中插入文件（数据）"></a>向集合中插入文件（数据）</h2><h3 id="插入一个"><a href="#插入一个" class="headerlink" title="插入一个"></a>插入一个</h3><ul><li><input disabled="" type="checkbox"> <code>insert_one(dict)</code><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">## collection.insert_one(file_dict)</span>one <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> <span class="token number">9999999</span><span class="token punctuation">,</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'马大师'</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'男的'</span><span class="token punctuation">,</span><span class="token string">'技能'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'闪电五连鞭'</span><span class="token punctuation">,</span> <span class="token string">'态急？'</span><span class="token punctuation">,</span> <span class="token string">'还有？'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>result <span class="token operator">=</span> collection<span class="token punctuation">.</span>insert_one<span class="token punctuation">(</span>one<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> result<span class="token punctuation">.</span>inserted_id<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p><font color="black" size="4">参数说明：</font></p><ul><li><input checked="" disabled="" type="checkbox"> <code>file_dict</code><ul><li><font color="black" size="4">字典型。值可以为数、字符串、列表等</font></li></ul></li><li><input checked="" disabled="" type="checkbox"> <code>_id</code><ul><li><font color="black" size="4">顾名思义，每个文件唯一标识（不可与其它文件重复）。一般没有特殊需要不用设置这个，它会自动生成[比较保险]</font></li></ul></li><li><input checked="" disabled="" type="checkbox"> <code>result.inserted_id</code><ul><li><font color="black" size="4">返回插入文件的 _id 值</font></li></ul></li></ul></blockquote><p><strong>执行上述代码，控制台输出如下:</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>pymongo<span class="token punctuation">.</span>results<span class="token punctuation">.</span>InsertOneResult <span class="token builtin">object</span> at <span class="token number">0x0000027973926140</span><span class="token operator">&gt;</span> <span class="token number">9999999</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>再看一下数据库：</strong></p><p><img src="https://img-blog.csdnimg.cn/20201120165306251.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MDIwODE4,size_16,color_FFFFFF,t_70#pic_center"></p><hr><h3 id="插入多个"><a href="#插入多个" class="headerlink" title="插入多个"></a>插入多个</h3><ul><li><input disabled="" type="checkbox"> <code>insert_many(list_of_dict)</code></li></ul><table><thead><tr><th>语法</th></tr></thead><tbody><tr><td>collection.insert_many(list_of_dict)</td></tr></tbody></table><ul><li><input checked="" disabled="" type="checkbox"> 传入参数为一个列表，列表元素为单个字典文件。</li></ul><table><tbody><tr><td align="left" bgcolor="f2d1ff">这里用一下**Faker**，创造一些假人假信息。【自己瞎编太费劲】</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> faker <span class="token keyword">import</span> Fakerfk <span class="token operator">=</span> Faker<span class="token punctuation">(</span><span class="token string">'zh_CN'</span><span class="token punctuation">)</span><span class="token comment">#语言为中文</span>fakers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">## 创建一个列表保存一些假人的信息</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>one <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> fk<span class="token punctuation">.</span>ssn<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'name'</span><span class="token punctuation">:</span> fk<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span> fk<span class="token punctuation">.</span>profile<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'sex'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'phone_number'</span><span class="token punctuation">:</span> fk<span class="token punctuation">.</span>phone_number<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'住址'</span><span class="token punctuation">:</span> fk<span class="token punctuation">.</span>address<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'job'</span><span class="token punctuation">:</span> fk<span class="token punctuation">.</span>job<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'company'</span><span class="token punctuation">:</span> fk<span class="token punctuation">.</span>company<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'webs'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>fk<span class="token punctuation">.</span>profile<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'website'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span>fakers<span class="token punctuation">.</span>append<span class="token punctuation">(</span>one<span class="token punctuation">)</span><span class="token comment">## 插入并获得返回状态 </span>result <span class="token operator">=</span> collection<span class="token punctuation">.</span>insert_many<span class="token punctuation">(</span>fakers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> result<span class="token punctuation">.</span>inserted_ids<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>控制台输出：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>pymongo<span class="token punctuation">.</span>results<span class="token punctuation">.</span>InsertManyResult <span class="token builtin">object</span> at <span class="token number">0x000001DABA7ECD00</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">'640205199907040266'</span><span class="token punctuation">,</span> <span class="token string">'341282199012223195'</span><span class="token punctuation">,</span> <span class="token string">'43010519800309991X'</span><span class="token punctuation">,</span> <span class="token string">'610401198202267335'</span><span class="token punctuation">,</span> <span class="token string">'542500197903223632'</span><span class="token punctuation">,</span> <span class="token string">'430811196007023433'</span><span class="token punctuation">,</span> <span class="token string">'210323194004012657'</span><span class="token punctuation">,</span> <span class="token string">'370612199205232407'</span><span class="token punctuation">,</span> <span class="token string">'441203199006013077'</span><span class="token punctuation">,</span> <span class="token string">'420704195106119785'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据库：</strong><br><img src="https://img-blog.csdnimg.cn/2020112017215578.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MDIwODE4,size_16,color_FFFFFF,t_70#pic_center"></p><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="查询与遍历"><a href="#查询与遍历" class="headerlink" title="查询与遍历"></a>查询与遍历</h2><h3 id="查询一个"><a href="#查询一个" class="headerlink" title="查询一个"></a>查询一个</h3><ul><li><input disabled="" type="checkbox"> <code>collection.find_one(filter)</code></li></ul><hr><ul><li><code>filter</code>: 可以理解为筛查条件</li><li>该语句返回符合条件的<strong>一个</strong>字典对象</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">## collection.find_one(filter)</span><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'马大师'</span><span class="token punctuation">}</span>result <span class="token operator">=</span> collection<span class="token punctuation">.</span>find_one<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>控制台输出：</strong><br>【方便看调整了一下换行】</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> <span class="token number">9999999</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'马大师'</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'男的'</span><span class="token punctuation">,</span> <span class="token string">'技能'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'闪电五连鞭'</span><span class="token punctuation">,</span> <span class="token string">'态急？'</span><span class="token punctuation">,</span> <span class="token string">'还有？'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="查询多个-遍历）"><a href="#查询多个-遍历）" class="headerlink" title="查询多个 (遍历）"></a>查询多个 (遍历）</h3><ul><li><input disabled="" type="checkbox"> <code>collection.find(filter)</code></li><li>返回符合条件的所有字典文件</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">}</span>result <span class="token operator">=</span> collection<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">## 遍历</span><span class="token keyword">for</span> one <span class="token keyword">in</span> result<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>one<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>控制台输出：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>pymongo<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>Cursor <span class="token builtin">object</span> at <span class="token number">0x000001769CAEC8E0</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> <span class="token string">'421024198601109957'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'刘秀梅'</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'phone_number'</span><span class="token punctuation">:</span> <span class="token string">'18861104808'</span><span class="token punctuation">,</span> <span class="token string">'住址'</span><span class="token punctuation">:</span> <span class="token string">'云南省拉萨县清浦哈尔滨街j座 847623'</span><span class="token punctuation">,</span> <span class="token string">'job'</span><span class="token punctuation">:</span> <span class="token string">'Flash设计/开发'</span><span class="token punctuation">,</span> <span class="token string">'company'</span><span class="token punctuation">:</span> <span class="token string">'超艺信息有限公司'</span><span class="token punctuation">,</span> <span class="token string">'webs'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'https://leiyan.net/'</span><span class="token punctuation">,</span> <span class="token string">'http://liao.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://tanli.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://www.lin.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'http://lu.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'http://jun.cn/'</span><span class="token punctuation">,</span> <span class="token string">'http://www.lei.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://www.11.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> <span class="token string">'370212195601208505'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'邹丹丹'</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'phone_number'</span><span class="token punctuation">:</span> <span class="token string">'13931880402'</span><span class="token punctuation">,</span> <span class="token string">'住址'</span><span class="token punctuation">:</span> <span class="token string">'贵州省深圳市璧山天津街R座 965470'</span><span class="token punctuation">,</span> <span class="token string">'job'</span><span class="token punctuation">:</span> <span class="token string">'项目经理'</span><span class="token punctuation">,</span> <span class="token string">'company'</span><span class="token punctuation">:</span> <span class="token string">'太极网络有限公司'</span><span class="token punctuation">,</span> <span class="token string">'webs'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'https://yongliang.cn/'</span><span class="token punctuation">,</span> <span class="token string">'http://li.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'http://www.ed.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://www.juanfang.net/'</span><span class="token punctuation">,</span> <span class="token string">'https://www.yb.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'http://www.huwang.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://xiulanxiulan.cn/'</span><span class="token punctuation">,</span> <span class="token string">'http://hou.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> <span class="token string">'341702196811193932'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'李文'</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'phone_number'</span><span class="token punctuation">:</span> <span class="token string">'14511823214'</span><span class="token punctuation">,</span> <span class="token string">'住址'</span><span class="token punctuation">:</span> <span class="token string">'澳门特别行政区玉兰市上街潘街j座 909220'</span><span class="token punctuation">,</span> <span class="token string">'job'</span><span class="token punctuation">:</span> <span class="token string">'面料辅料采购'</span><span class="token punctuation">,</span> <span class="token string">'company'</span><span class="token punctuation">:</span> <span class="token string">'凌云网络有限公司'</span><span class="token punctuation">,</span> <span class="token string">'webs'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'https://www.qiang.org/'</span><span class="token punctuation">,</span> <span class="token string">'http://ej.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'http://juanyang.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://leiye.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://www.md.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://www.ganghuang.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'https://www.ma.net/'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">'_id'</span><span class="token punctuation">:</span> <span class="token string">'440705195208163752'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'王兵'</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'phone_number'</span><span class="token punctuation">:</span> <span class="token string">'15772203979'</span><span class="token punctuation">,</span> <span class="token string">'住址'</span><span class="token punctuation">:</span> <span class="token string">'河北省超市吉区耿街h座 131212'</span><span class="token punctuation">,</span> <span class="token string">'job'</span><span class="token punctuation">:</span> <span class="token string">'快递员'</span><span class="token punctuation">,</span> <span class="token string">'company'</span><span class="token punctuation">:</span> <span class="token string">'良诺科技有限公司'</span><span class="token punctuation">,</span> <span class="token string">'webs'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'https://www.yonglei.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://tanxiao.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://www.lei.net/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'http://leicai.cn/'</span><span class="token punctuation">,</span> <span class="token string">'http://www.fang.cn/'</span><span class="token punctuation">,</span> <span class="token string">'http://98.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'https://www.yangmin.cn/'</span><span class="token punctuation">,</span> <span class="token string">'https://69.org/'</span><span class="token punctuation">,</span> <span class="token string">'https://minxiulan.cn/'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="高级查询"><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h2><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><table><thead><tr><th>符号</th><th align="left">说明</th></tr></thead><tbody><tr><td>$eq</td><td align="left">它将匹配等于指定值的值。</td></tr><tr><td>$ne</td><td align="left">它将匹配所有不等于指定值的值</td></tr><tr><td>$gt</td><td align="left">它将匹配大于指定值的值。</td></tr><tr><td>$gte</td><td align="left">它将匹配所有大于或等于指定值的值</td></tr><tr><td>$lt</td><td align="left">它将匹配所有小于指定值的值</td></tr><tr><td>$lte</td><td align="left">它将匹配所有小于或等于指定值的值</td></tr><tr><td>$in</td><td align="left">它将匹配数组中指定的任何值</td></tr><tr><td>$nin</td><td align="left">它讲匹配不再数组中的值</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'fid'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$eq'</span><span class="token punctuation">:</span> <span class="token number">1011</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">'value'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$ne'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">}</span>filter2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$in'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Fry'</span><span class="token punctuation">,</span> <span class="token string">'Bender'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>filter3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'price'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$lt'</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">'$gt'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><table><thead><tr><th>符号</th><th align="left">说明</th></tr></thead><tbody><tr><td>$and</td><td align="left">它将查询语句与逻辑连接起来，<br>AND返回同时符合这两个条件的所有文档。</td></tr><tr><td>$not</td><td align="left">它将反转查询的结果，<br>并返回与查询表达式不匹配的文档。</td></tr><tr><td>$nor</td><td align="left">它将使用逻辑将查询子句连接起来，<br>NOR返回所有与子句不匹配的文档。</td></tr><tr><td>$or</td><td align="left">它将使用逻辑将查询子句连接起来，<br>OR返回匹配任一子句条件的所有文档。</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'$and'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'fid'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$eq'</span><span class="token punctuation">:</span> <span class="token number">2048</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">## filter_01</span><span class="token punctuation">{</span><span class="token string">'sid'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$ne'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">## filter_02</span><span class="token punctuation">]</span><span class="token punctuation">}</span>filter1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'$or'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'fid'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$eq'</span><span class="token punctuation">:</span> <span class="token number">2048</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">## filter_01</span><span class="token punctuation">{</span><span class="token string">'sid'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$ne'</span><span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">## filter_02</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'$regex'</span><span class="token punctuation">:</span> <span class="token string">r'Tom [a-zA-Z]+'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="遍历集合内所有文件："><a href="#遍历集合内所有文件：" class="headerlink" title="遍历集合内所有文件："></a>遍历集合内所有文件：</h2><ul><li><input disabled="" type="checkbox"> 获取集合内所有文件：</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">## collection.find({})</span><span class="token keyword">for</span> one <span class="token keyword">in</span> collection<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>one<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="删除文档（文件）"><a href="#删除文档（文件）" class="headerlink" title="删除文档（文件）"></a>删除文档（文件）</h2><h3 id="删除一个"><a href="#删除一个" class="headerlink" title="删除一个"></a>删除一个</h3><ul><li><input checked="" disabled="" type="checkbox"> <code>collection.delete_one(filter)</code></li></ul><h3 id="删除多个"><a href="#删除多个" class="headerlink" title="删除多个"></a>删除多个</h3><ul><li><input checked="" disabled="" type="checkbox"> <code>collection.delete_many(filter)</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'小美'</span><span class="token punctuation">}</span>collection<span class="token punctuation">.</span>delete_one<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">}</span>collection<span class="token punctuation">.</span>delete_many<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="更新文档【增、改、删】"><a href="#更新文档【增、改、删】" class="headerlink" title="更新文档【增、改、删】"></a>更新文档【增、改、删】</h2><ul><li><input disabled="" type="checkbox"> 针对文档中的字段而言。</li><li><input disabled="" type="checkbox"> 或者说是针对键值对而言的更新。</li></ul><hr><h3 id="更新一个"><a href="#更新一个" class="headerlink" title="更新一个"></a>更新一个</h3><ul><li><input checked="" disabled="" type="checkbox"> <code>collection.update_one(filter, update)</code></li></ul><h3 id="更新多个"><a href="#更新多个" class="headerlink" title="更新多个"></a>更新多个</h3><ul><li><input checked="" disabled="" type="checkbox"> <code>collection.update_many(filter, update)</code></li></ul><hr><ul><li><input disabled="" type="checkbox"> 新参量 <code>update</code> 说明：<br>形式 <code>{command: {key: value}}</code></li></ul><hr><table><thead><tr><th>command(命令)</th><th align="left">功能</th></tr></thead><tbody><tr><td>$set</td><td align="left">修改或新增字段</td></tr><tr><td>$unset</td><td align="left">删除指定字段</td></tr><tr><td>$rename</td><td align="left">重命名字段</td></tr></tbody></table><h3 id="set-命令"><a href="#set-命令" class="headerlink" title="$set 命令"></a>$set 命令</h3><ul><li><input checked="" disabled="" type="checkbox"> 如果 <code>key</code> 存在，那么更改其值为 <code>value</code></li><li><input checked="" disabled="" type="checkbox"> 如果 <code>key</code>不存在，那么插入 <code>{key: value}</code> 字段<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'马大师'</span><span class="token punctuation">}</span>add_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">}</span><span class="token comment">## key name 存在，改其值为 马大师？</span>update <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'$set'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'马大师？'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">## key age 不存在，插入字段</span>update1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'$set'</span><span class="token punctuation">:</span> add_data<span class="token punctuation">}</span>collection<span class="token punctuation">.</span>update_one<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">,</span> update1<span class="token punctuation">)</span>collection<span class="token punctuation">.</span>update_one<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">,</span> update<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><strong>于是：</strong><br><img src="https://img-blog.csdnimg.cn/20201120180210787.jpg#pic_center"></li></ul><hr><h3 id="unset-命令"><a href="#unset-命令" class="headerlink" title="$unset 命令"></a>$unset 命令</h3><ul><li><input checked="" disabled="" type="checkbox"> <code>filter</code> 用于定位到文档</li><li><input checked="" disabled="" type="checkbox"> 删除文档中的整个 <code>{key: value}</code> 字段</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'马大师？'</span><span class="token punctuation">}</span>del_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">}</span>update1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'$unset'</span><span class="token punctuation">:</span> del_data<span class="token punctuation">}</span>collection<span class="token punctuation">.</span>update_one<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">,</span> update1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>于是 age字段不在了：</strong><br><img src="https://img-blog.csdnimg.cn/20201120180844364.jpg#pic_center"></p><hr><h3 id="rename-命令"><a href="#rename-命令" class="headerlink" title="$rename  命令"></a>$rename  命令</h3><ul><li><input checked="" disabled="" type="checkbox"> <code>{'$rename': {'initile_name': 'new_name'}</code> 【意会意会】</li><li><input checked="" disabled="" type="checkbox"> 此处 <code>key(initial_name)</code> 为文档中的某一 <code>key</code> (比如：name、sex)</li><li><input checked="" disabled="" type="checkbox"> <code>value(new_name)</code> 为想要修改为的key值</li><li><input checked="" disabled="" type="checkbox"> 意思就是，执行语句后，<code>initial_name</code> 换为 <code>new_name</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">filter</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'马大师？'</span><span class="token punctuation">}</span>update <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'$rename'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'名字'</span><span class="token punctuation">}</span><span class="token punctuation">}</span>collection<span class="token punctuation">.</span>update_one<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">,</span> update<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><input disabled="" type="checkbox"> 于是可以看到，数据库中<strong>name</strong>变成了<strong>名字</strong></li></ul><p><strong>运行前：</strong><br><img src="https://img-blog.csdnimg.cn/20201120180844364.jpg#pic_center"><br><strong>运行后：</strong><br><img src="https://img-blog.csdnimg.cn/20201120221851215.jpg#pic_center"></p><hr><p><a href="#list">跳转顶部</a></p><hr><h2 id="断开连接【关闭数据库】"><a href="#断开连接【关闭数据库】" class="headerlink" title="断开连接【关闭数据库】"></a>断开连接【关闭数据库】</h2><ul><li><input disabled="" type="checkbox"> <code>client.close()</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> db </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mongodb </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pymysql的基本使用</title>
      <link href="/pages/db/usepymysql.html"/>
      <url>/pages/db/usepymysql.html</url>
      
        <content type="html"><![CDATA[<h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqlconnection <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'pass_word'</span><span class="token punctuation">,</span>db<span class="token operator">=</span><span class="token string">'db_name'</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">,</span>cursorclass<span class="token operator">=</span>pymsql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><input checked="" disabled="" type="checkbox"> <code>connection</code> 对象常用方法</li></ul><table><thead><tr><th align="left">方法</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">cursor()</td><td align="left">获取游标对象</td></tr><tr><td align="left">commit()</td><td align="left">提交事务</td></tr><tr><td align="left">rollback()</td><td align="left">回滚事务</td></tr><tr><td align="left">close()</td><td align="left">关闭数据库连接</td></tr></tbody></table><hr><h2 id="获取游标"><a href="#获取游标" class="headerlink" title="获取游标"></a>获取游标</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqlconnection <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>cursor <span class="token operator">=</span> connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><input checked="" disabled="" type="checkbox"> <code>cursor</code> 常用方法</li></ul><table><thead><tr><th align="left">方法</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">excute(operation[, parameters])</td><td align="left">执行单条指令</td></tr><tr><td align="left">excutemany(operation, seq_of_params)</td><td align="left">批量执行指令（批量更新…）</td></tr><tr><td align="left">fetchone()</td><td align="left">获取查询结果的下一条结果</td></tr><tr><td align="left">fetchmany(size)</td><td align="left">获取指定数量的结果</td></tr><tr><td align="left">fetchall()</td><td align="left">获取所有查询结果</td></tr><tr><td align="left">close()</td><td align="left">关闭当前游标</td></tr></tbody></table><hr><h2 id="执行指令并提交"><a href="#执行指令并提交" class="headerlink" title="执行指令并提交"></a>执行指令并提交</h2><ul><li><input checked="" disabled="" type="checkbox"> <code>cursor.excute()</code></li><li><input checked="" disabled="" type="checkbox"> <code>cursor.excutemany()</code></li><li><input checked="" disabled="" type="checkbox"> <code>connection.commit()</code></li></ul><hr><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p>通过执行不同的 MySQL 指令实现</p><p> <a href="https://blog.csdn.net/qq_45020818/article/details/121213264"><font size="4">更详细的SQL指令，参考之前的这篇文章【点击查看】<font></font></font></a></p><font size="4"><font><hr><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqlconnection <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'pass_word'</span><span class="token punctuation">,</span> <span class="token string">'my_db'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token comment"># 获取游标</span>cursor <span class="token operator">=</span> connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># ----------------------指令--------------------------------------</span><span class="token comment"># 创建表 sql 指令</span>create_table_sql <span class="token operator">=</span> <span class="token triple-quoted-string string">'''create table mytable    id int(20) not null primary key,    name varchar(20) unicode not null,    gender varchar(8) unicode not null,    )engine=InnoDB default charset=utf8mb4;    '''</span><span class="token comment"># 插入一条数据指令</span>insert_one_sql <span class="token operator">=</span> <span class="token string">'insert into mytable(id, name, gender) values(10010, "Bender", "Male")'</span><span class="token comment"># 插入多条数据指令，注意占位符 %s</span>insert_many_sql <span class="token operator">=</span> <span class="token string">"insert into mytable values(%s, %s, %s)"</span><span class="token comment"># 相应数据</span>datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10011</span><span class="token punctuation">,</span> <span class="token string">"Leela"</span><span class="token punctuation">,</span> <span class="token string">"Famale"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10012</span><span class="token punctuation">,</span> <span class="token string">'Fry'</span><span class="token punctuation">,</span> <span class="token string">'Male'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># ...</span><span class="token comment"># 其他指令参考之前文章[上文链接]</span><span class="token comment"># https://blog.csdn.net/qq_45020818/article/details/121213264</span><span class="token comment"># -----------------------------------------------------------------------</span><span class="token comment"># 执行创建 表 指令</span>cursor<span class="token punctuation">.</span>excute<span class="token punctuation">(</span>create_table_sql<span class="token punctuation">)</span><span class="token comment"># 执行插入单条数据指令</span>cursor<span class="token punctuation">.</span>excute<span class="token punctuation">(</span>insert_one_sql<span class="token punctuation">)</span><span class="token comment"># 执行插入多条数据指令</span>cursor<span class="token punctuation">.</span>excutemany<span class="token punctuation">(</span>insert_many_sql<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token comment"># 提交</span>connection<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="回滚"><a href="#回滚" class="headerlink" title="回滚"></a>回滚</h2><ul><li>发生错误时，回滚<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token keyword">try</span><span class="token punctuation">:</span>connection <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>cursor <span class="token operator">=</span> conection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>excute<span class="token punctuation">(</span><span class="token string">'insert into mytable values(***,***,***)'</span>connection<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span><span class="token comment"># 发生错误时回滚</span>connection<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>connection<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><ul><li><input disabled="" type="checkbox"> <code>fetchone()</code></li><li><input disabled="" type="checkbox"> <code>fetchmany()</code></li><li><input disabled="" type="checkbox"> <code>fetchall()</code></li><li><input disabled="" type="checkbox"> 配合 <code>select ** from _table[where **]</code> 语句使用</li></ul><hr><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqlconnection <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token comment"># 连接</span>cursor <span class="token operator">=</span> connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 获取游标</span><span class="token comment"># 查询 sql语句</span>select_sql <span class="token operator">=</span> <span class="token string">'select id,name,gender from mytable where id&gt;10010'</span><span class="token comment"># 执行查询指令</span>cursor<span class="token punctuation">.</span>excute<span class="token punctuation">(</span>select_sql<span class="token punctuation">)</span><span class="token comment"># 获取所有查询结果</span>datas <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 遍历查询结果</span><span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'id: </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">\t'</span></span>   <span class="token string-interpolation"><span class="token string">f'name: </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">\t'</span></span> <span class="token string-interpolation"><span class="token string">f'gender: </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">[</span><span class="token string">"gender"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># 关闭数据库连接</span>connection<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><ul><li>connection.close()</li></ul></font></font>]]></content>
      
      
      <categories>
          
          <category> db </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> python </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL常用指令</title>
      <link href="/pages/db/mysqlcmds.html"/>
      <url>/pages/db/mysqlcmds.html</url>
      
        <content type="html"><![CDATA[<h2 id="开启、关闭服务"><a href="#开启、关闭服务" class="headerlink" title="开启、关闭服务"></a>开启、关闭服务</h2><ul><li><input checked="" disabled="" type="checkbox"> 启动服务<br><code>net start mysql8</code><br><code>net start mysql57</code></li><li><input checked="" disabled="" type="checkbox"> 使用账户密码进入 MySQL<br><code>mysql -u root -p</code></li><li><input checked="" disabled="" type="checkbox"> 关闭服务<br><code>net stop mysql8</code></li></ul><hr><h2 id="操作——-gt-数据库"><a href="#操作——-gt-数据库" class="headerlink" title="操作——>数据库"></a>操作——&gt;数据库</h2><table><thead><tr><th>操作</th><th align="left">实现</th></tr></thead><tbody><tr><td>创建数据库</td><td align="left"><code>create database</code> db_name;</td></tr><tr><td>选择数据库</td><td align="left"><code>use</code> db_name;</td></tr><tr><td>查看数据库</td><td align="left"><code>show databases;</code></td></tr><tr><td>删除数据库</td><td align="left"><code>drop database</code> db_name;</td></tr></tbody></table><hr><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p><code class="prism language-sql">create database 数据库名;</code><br>==命名规则：==</p><ul><li>任意：字母、数字、<code>_</code>、<code>$</code>。皆可作为开头</li><li>不能纯数字</li><li>大小写不敏感（Windows）。Linux大小写敏感</li><li>==最长==64个字符</li></ul><hr><h3 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h3><p><code class="prism language-sql">use 数据库名;</code></p><ul><li>选择之后才可以对其进行操作</li></ul><hr><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><p><code class="prism language-sql">show databases</code></p><ul><li>查看所有</li></ul><hr><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p><code class="prism language-sql">drop database 数据库名;</code></p><hr><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h3><ul><li><input checked="" disabled="" type="checkbox"> 整数</li></ul><table><thead><tr><th align="left">类型</th><th align="left">范围</th><th align="left">说明</th><th>单位</th></tr></thead><tbody><tr><td align="left">TINYINT</td><td align="left">-128<del>127; 0</del>255</td><td align="left">最小整数</td><td>1字节</td></tr><tr><td align="left">BIT</td><td align="left">-127~127；0~255</td><td align="left">最小整数</td><td>1字节</td></tr><tr><td align="left">BOOL</td><td align="left">-127~127；0~255</td><td align="left">最小整数</td><td>1字节</td></tr><tr><td align="left">SMALLINT</td><td align="left">-32768~32767；0~65535</td><td align="left">小型整数</td><td>2字节</td></tr><tr><td align="left">MEDIUMINT</td><td align="left">-8388608~8388607；0~16777215</td><td align="left">中型整数</td><td>3字节</td></tr><tr><td align="left">INT</td><td align="left">-2147483648~2147483647;<br>0~4294967295</td><td align="left">标准整数</td><td>4字节</td></tr><tr><td align="left">BIGINT</td><td align="left">-9223372036854775808~9223372036854775807;<br>0~18446744073709551615</td><td align="left">大型整数</td><td>8字节</td></tr></tbody></table><ul><li><input checked="" disabled="" type="checkbox"> 浮点数</li></ul><table><thead><tr><th align="left">类型</th><th align="left">范围</th><th>单位</th></tr></thead><tbody><tr><td align="left">FLOAT</td><td align="left">+-3.402823466E38</td><td>8字节或4字节</td></tr><tr><td align="left">DOUBLE</td><td align="left">+-1.7976931348623157E308<br>+-2.225073858502014E-308</td><td>8字节</td></tr><tr><td align="left">DECIMAL</td><td align="left">可变</td><td>自定义长度</td></tr></tbody></table><hr><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><ul><li><input checked="" disabled="" type="checkbox"> 普通文本字符串</li></ul><table><thead><tr><th align="left">类型</th><th>范围</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">[national]<br>char(M)<br>[binary | ASCII | unicode]</td><td>0-255个字符</td><td align="left">字符串长度固定为M<br>national 指定默认字符集。<br>binary 指定是否区分大小写。<br>ASCII 指定使用latin1字符集。<br>unicode 指定使用UCS字符集。</td></tr><tr><td align="left">char</td><td>0-255个字符</td><td align="left">与char(M)类似</td></tr><tr><td align="left">[national]<br>varchar(M)<br>[binary]</td><td>0-255个字符</td><td align="left">长度可变，其余与char(M)类似</td></tr></tbody></table><ul><li><input checked="" disabled="" type="checkbox"> 可变类型</li></ul><table><thead><tr><th align="left">类型</th><th>范围（字符数）</th></tr></thead><tbody><tr><td align="left">TINYBLOB</td><td>1-255</td></tr><tr><td align="left">TINYTEXT</td><td>1-255</td></tr><tr><td align="left">BLOM</td><td>1 ~ (2^16-1)</td></tr><tr><td align="left">TEXT</td><td>1 ~ (2^16-1)</td></tr><tr><td align="left">MEDIUNBLOB</td><td>1 ~ (2^24-1)</td></tr><tr><td align="left">MEDIUMTEXT</td><td>1 ~ (2^24-1)</td></tr><tr><td align="left">LONGBLOB</td><td>1 ~ (2^32-1)</td></tr><tr><td align="left">LONGTEXT</td><td>1 ~ (2^32-1)</td></tr></tbody></table><ul><li><input checked="" disabled="" type="checkbox"> 特殊类型</li></ul><table><thead><tr><th align="left">类型</th><th>最大值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Enum(“value”, “value2”,…)</td><td>65535</td><td align="left">只可容纳所列值之一或NULL</td></tr><tr><td align="left">Set(“value”,”value2”,…)</td><td>64</td><td align="left">可以容纳一组值或NULL</td></tr></tbody></table><h3 id="选择原则"><a href="#选择原则" class="headerlink" title="选择原则"></a>选择原则</h3><ul><li><input checked="" disabled="" type="checkbox"> 速度。选固定列，CHAR</li><li><input checked="" disabled="" type="checkbox"> 空间。动态列，VARCHAR</li><li><input checked="" disabled="" type="checkbox"> 要将列中内容限制在一种选择，ENUM</li><li><input checked="" disabled="" type="checkbox"> 允许一列中多个条目，SET</li><li><input checked="" disabled="" type="checkbox"> 搜索内容不区分大小写，TEXT</li><li><input checked="" disabled="" type="checkbox"> 搜索内容区分大小写，BLOB</li></ul><hr><h3 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h3><table><thead><tr><th align="left">类型</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="left">DATE</td><td align="left">1000-01-01 9999-12-31</td></tr><tr><td align="left">TIME</td><td align="left">-838:58:59 835:59:59</td></tr><tr><td align="left">DATETIME</td><td align="left">1000-01-01 00:00:00<br>9999-12-31 23:59:59</td></tr><tr><td align="left">TIMESTAMP</td><td align="left">1970-01-01 00:00:00<br>2037年某个时间</td></tr><tr><td align="left">YEAR</td><td align="left">1901-2155</td></tr></tbody></table><hr><h2 id="操作——-gt-表"><a href="#操作——-gt-表" class="headerlink" title="操作——>表"></a>操作——&gt;表</h2><table><thead><tr><th align="left">操作</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><code>create table</code> table_name(<br>&amp;emsp;&amp;emsp;列名1 属性1,…)</td><td align="left">创建表</td></tr><tr><td align="left"><code>show columns from</code> db.table<br><code>show columns from</code> table <code>from</code> db</td><td align="left">察看表结构</td></tr><tr><td align="left"><code>alter table</code> _table cmd</td><td align="left">修改表结构</td></tr><tr><td align="left"><code>drop table</code> _table<br><code>drop table</code> <code>if exists</code> _table</td><td align="left">删除数据表</td></tr></tbody></table><hr><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">// 示例</span><span class="token keyword">create</span> <span class="token keyword">table</span> my_table{<span class="token comment">--&gt; id int(8) auto_increment primary key,</span><span class="token comment">--&gt; username varchar(30) not null,</span><span class="token comment">--&gt; password varchar(20) not null,</span><span class="token comment">--&gt; creattime datetime);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>==语法：==</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span><span class="token punctuation">[</span><span class="token keyword">TEMPORARY</span><span class="token punctuation">]</span> <span class="token keyword">table</span> <span class="token punctuation">[</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span>create_definition<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>table_options<span class="token punctuation">]</span> <span class="token punctuation">[</span>select_statement<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">TEMPRORART</td><td align="left">表示创建临时表</td></tr><tr><td align="left">IF NOT EXISTS</td><td align="left">避免表存在时报错</td></tr><tr><td align="left">create_definition</td><td align="left">表的列属性。创建时至少包含1列</td></tr><tr><td align="left">table_options</td><td align="left">表的一些特性参数</td></tr><tr><td align="left">select_statement</td><td align="left">SELECT 语句描述部分。<br>可以快速创建表</td></tr></tbody></table><ul><li><input checked="" disabled="" type="checkbox"> create_definition<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">col_name <span class="token keyword">type</span> <span class="token punctuation">[</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> default_value<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>reference_definition<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">col_name</td><td align="left">字段名【列名】</td></tr><tr><td align="left">type</td><td align="left">字段（数据）类型</td></tr><tr><td align="left">NOT NULL | NULL</td><td align="left">该列是否允许空值（默认允许）。0和空格不算空值。</td></tr><tr><td align="left">DEFALUT default_value</td><td align="left">默认值</td></tr><tr><td align="left">AUTO_INCREMENT</td><td align="left">是否自动编号。每个列表只能有一列</td></tr><tr><td align="left">PRIMARY KEY</td><td align="left">是否为主键。一个表只能有一个主键</td></tr><tr><td align="left">reference_definition</td><td align="left">为字段添加注释</td></tr></tbody></table></li></ul><hr><h3 id="查找表"><a href="#查找表" class="headerlink" title="查找表"></a>查找表</h3><ul><li><input checked="" disabled="" type="checkbox"> <code>show</code><br><code class="prism language-sql">show [full] colmuns from _table [from _db];</code><br>或者<br><code class="prism language-sql">show [full] colmuns from _db._table;</code></li><li><input checked="" disabled="" type="checkbox"> <code>describe</code>  可以简写为 <code>desc</code><br><code class="prism language-sql">describe _table;</code><br>或者<br><code class="prism language-sql">describe _table _colum;</code></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">&gt;</span> <span class="token keyword">desc</span> _mytable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token punctuation">[</span><span class="token keyword">IGNORE</span><span class="token punctuation">]</span> <span class="token keyword">table</span> _table alter_spec<span class="token punctuation">[</span><span class="token punctuation">,</span>alter_spec<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>alter_spec</code> 可以有多个，由 <code>,</code> 分开</p><hr><ul><li><input checked="" disabled="" type="checkbox"> 添加新字段</li></ul><p><code>add [column] create_definition [first | after column_name]</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> _table <span class="token keyword">add</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> unicode<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><ul><li><input checked="" disabled="" type="checkbox"> 添加索引名称</li></ul><p><code>add index [index_name] (index_col_name, ...)</code></p><hr><ul><li><input checked="" disabled="" type="checkbox"> 添加主键名称</li></ul><p><code>add primary key (index_col_name, ...)</code></p><hr><ul><li><input checked="" disabled="" type="checkbox"> 添加唯一索引</li></ul><p><code>add unique [index_name] (index_col_name,...)</code></p><hr><ul><li><input checked="" disabled="" type="checkbox"> 修改字段名</li></ul><p> <code>alter [column] col_name {set default | drop default}</code></p><hr><ul><li><input checked="" disabled="" type="checkbox"> 修改字段类型</li></ul><p><code>change [column] old_col_name create_definition</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> _tablechange <span class="token keyword">column</span>id fid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><ul><li><input checked="" disabled="" type="checkbox"> 修改子句定义字段</li></ul><p><code>modify [column] create_definition</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> _table<span class="token keyword">modify</span> age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><ul><li><input checked="" disabled="" type="checkbox"> 删除字段</li></ul><p> <code>drop [column] col_name</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> _table<span class="token keyword">drop</span> address<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><ul><li><input checked="" disabled="" type="checkbox"> 删除主键名称</li></ul><p> <code>drop primary key</code></p><hr><ul><li><input checked="" disabled="" type="checkbox"> 删除索引名称</li></ul><p> <code>drop index index_name</code></p><hr><ul><li><input checked="" disabled="" type="checkbox"> 更改表名</li></ul><p> <code>rename [as] new_tbl_name</code><br> </p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> _table <span class="token keyword">rename</span> mytable<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br><code>table_option</code><p></p><hr><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token punctuation">[</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">]</span> _table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="操作——-gt-记录"><a href="#操作——-gt-记录" class="headerlink" title="操作——>记录"></a>操作——&gt;记录</h2><table><thead><tr><th align="left">操作</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><code>insert into</code> <code>_table</code> (cols,..) <code>values</code>(vals,…);<br><code>insert into</code> <code>_table</code> <code>values</code>(vals,..);</td><td align="left">插入记录</td></tr><tr><td align="left"><code>select</code> (cols,..) <code>from</code> _table <code>where</code> condition;<br><code>select</code> * <code>from</code> table;</td><td align="left">查询</td></tr><tr><td align="left"><code>update</code> _table <code>set</code><br>&amp;emsp;&amp;emsp; col_1=val_1, col_2=val_2,… <br>&amp;emsp;&amp;emsp; <code>where</code> codition;</td><td align="left">修改记录</td></tr><tr><td align="left"><code>delete from</code> _table <code>where</code> condition;</td><td align="left">删除记录</td></tr></tbody></table><hr><h3 id="添加记录"><a href="#添加记录" class="headerlink" title="添加记录"></a>添加记录</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> _table<span class="token punctuation">(</span>clo_1<span class="token punctuation">,</span> clo_2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span>val_1<span class="token punctuation">,</span> val_2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> _table <span class="token keyword">values</span><span class="token punctuation">(</span>val_1<span class="token punctuation">,</span> val_2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="查找记录"><a href="#查找记录" class="headerlink" title="查找记录"></a>查找记录</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> selection_list <span class="token keyword">from</span> _table <span class="token keyword">where</span> condition<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> _table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>==例如：==</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">from</span> _table <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'Fry'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="修改记录"><a href="#修改记录" class="headerlink" title="修改记录"></a>修改记录</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> _table <span class="token keyword">set</span> col_name<span class="token operator">=</span>new_value<span class="token punctuation">,</span>col_name2<span class="token operator">=</span>new_value2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">where</span> condition<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>==例如：==</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> _table <span class="token keyword">set</span>name<span class="token operator">=</span><span class="token string">'Bender'</span><span class="token punctuation">,</span>address<span class="token operator">=</span><span class="token string">'USA'</span><span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1001</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="删除记录"><a href="#删除记录" class="headerlink" title="删除记录"></a>删除记录</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> _table <span class="token keyword">where</span> condition<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>==例如：==</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> _table <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1001</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="详细查找"><a href="#详细查找" class="headerlink" title="详细查找"></a>详细查找</h2><p> 复杂 <code>select</code> 语法：</p><table><thead><tr><th align="left">语法</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><code>select selection_list</code></td><td align="left">选择要查询的列</td></tr><tr><td align="left"><code>from _table</code></td><td align="left">指定数据表</td></tr><tr><td align="left"><code>where primary_condition</code></td><td align="left">查询时必须满足的条件</td></tr><tr><td align="left"><code>group by grouping_columns</code></td><td align="left">对结果的分组规则</td></tr><tr><td align="left"><code>order gy sorting_columns</code></td><td align="left">对结果的排序规则</td></tr><tr><td align="left"><code>having secondary_constraint</code></td><td align="left">查询时满足的第二条件</td></tr><tr><td align="left"><code>limit count</code></td><td align="left">限定输出的记录数量</td></tr></tbody></table><hr><h3 id="selection-list"><a href="#selection-list" class="headerlink" title="selection_list"></a>selection_list</h3><ul><li><code>*</code> 查询所有字段</li><li>多个字段，用 <code>,</code> 分开<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> _table<span class="token punctuation">;</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">from</span> _table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><hr><h3 id="table-list"><a href="#table-list" class="headerlink" title="table_list"></a>table_list</h3><ul><li>多个表间用 <code>,</code> 分隔，<code>表名.字段名</code><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> _table<span class="token punctuation">.</span>id mytable<span class="token punctuation">.</span>name<span class="token punctuation">,</span> age<span class="token keyword">from</span> _table<span class="token punctuation">,</span> mytable<span class="token keyword">where</span> _table<span class="token punctuation">.</span>id <span class="token operator">=</span> mytable<span class="token punctuation">.</span>id <span class="token operator">and</span> _table<span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><table><thead><tr><th align="left">条件</th><th align="left">示例</th></tr></thead><tbody><tr><td align="left">=</td><td align="left">id=10</td></tr></tbody></table><blockquote><p>|id&gt;0<br>&lt;|id&lt;0<br>=|id&gt;=10<br>&lt;=|id&lt;=10<br>!=|id!=10<br>is null|id is null<br>is not null|id is not null<br>between|id between 1 and 10010<br>in|id in (10010, 10011)<br>not in|id not in (10010, 10011)<br>like|name like(‘%ar%’)<br>not like|name not like(‘%ar%’)<br>regexp|name regexp ‘F.+’ &amp;emsp;&amp;emsp;==正则表达式==</p></blockquote><hr><h3 id="like-运算符"><a href="#like-运算符" class="headerlink" title="like 运算符"></a>like 运算符</h3><ul><li>模糊查询</li><li><input checked="" disabled="" type="checkbox"> <code>%</code> 匹配0或多个字符</li><li><input checked="" disabled="" type="checkbox"> <code>_</code> 匹配0或一个字符<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">from</span> _table<span class="token keyword">where</span> name <span class="token operator">like</span><span class="token punctuation">(</span><span class="token string">'%ar%'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>类似：Mark, Far, array, ar…..都可以被匹配</li></ul><hr><h3 id="distinct"><a href="#distinct" class="headerlink" title="distinct"></a>distinct</h3><ul><li><input checked="" disabled="" type="checkbox"> 去除结果中重复行<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> name <span class="token keyword">from</span> _table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><hr><h3 id="concat-函数"><a href="#concat-函数" class="headerlink" title="concat() 函数"></a>concat() 函数</h3><ul><li><input checked="" disabled="" type="checkbox"> 联合多个字段，构成一个字符串</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span> concat<span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token keyword">as</span> info<span class="token punctuation">,</span> job <span class="token keyword">from</span> _table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>结果中将会出现一列 <code>info</code> 形式： <code>name: age</code></li></ul><hr><h3 id="使用函数、表达式"><a href="#使用函数、表达式" class="headerlink" title="使用函数、表达式"></a>使用函数、表达式</h3><table><thead><tr><th align="left">名称</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">avg(col_name)</td><td align="left">平均值</td></tr><tr><td align="left">count(col_name)</td><td align="left">统计非空字段。前有 distinct 则不统计重复。count(*) 统计包含空值</td></tr><tr><td align="left">min(col_name)</td><td align="left">最小</td></tr><tr><td align="left">max(col_name)</td><td align="left">最大</td></tr><tr><td align="left">std(col_name)</td><td align="left">标准背离值</td></tr><tr><td align="left">stdtev(col_name)</td><td align="left">与std相同</td></tr><tr><td align="left">sum(col_name)</td><td align="left">总和</td></tr></tbody></table><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>age <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">'年轻10%'</span> <span class="token keyword">from</span> _table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><input checked="" disabled="" type="checkbox"> <code>age * 0.9</code> 计算年龄90%</li><li><input checked="" disabled="" type="checkbox"> <code>as</code> 更改显示名称</li></ul><hr><h3 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h3><ul><li>通常与 <code>avg()</code>, <code>sum()</code> 一起使用，能发挥最大作用<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">,</span>name <span class="token keyword">from</span> _table <span class="token keyword">group</span> <span class="token keyword">by</span> name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><input disabled="" type="checkbox"> 上述语句可以列出表中：同名者的平均年龄，以及姓名</li></ul><hr><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul><li>默认升序</li><li>降序：<code>order by</code> col_name <code>desc</code></li></ul><p>==按 id 降序==</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> _table <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">desc</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="having"><a href="#having" class="headerlink" title="having"></a>having</h3><ul><li><input checked="" disabled="" type="checkbox"> 对查询结果进一步筛选</li><li><input checked="" disabled="" type="checkbox"> <code>where</code> 在分组前应用</li><li><input checked="" disabled="" type="checkbox"> <code>having</code> 在分组后应用<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">,</span> nama <span class="token keyword">from</span> _table<span class="token keyword">group</span> <span class="token keyword">by</span> name<span class="token keyword">having</span> <span class="token function">avg</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">18</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="limit-子句"><a href="#limit-子句" class="headerlink" title="limit 子句"></a>limit 子句</h3><ul><li><input checked="" disabled="" type="checkbox"> 限制查询输出条数<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age <span class="token keyword">from</span> _table<span class="token keyword">where</span> age<span class="token operator">&gt;</span><span class="token number">18</span><span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>返回5条<code>age&gt;18</code>的信息</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> db </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 指令 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序中使用阿里图标库</title>
      <link href="/pages/wxminiprogram/useiconfont.html"/>
      <url>/pages/wxminiprogram/useiconfont.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、导入-wxss方式"><a href="#一、导入-wxss方式" class="headerlink" title="一、导入 wxss方式"></a>一、导入 wxss方式</h2><ul><li>简单迅速</li><li>图标类似文字处理<ul><li>只能单色</li></ul></li></ul><hr><h3 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h3><ul><li>1、添加需要的图标到项目<ul><li>购物车–&gt; 项目</li></ul></li><li>2、选择 font class</li><li>3、打开该链接，拷贝内容</li><li>4、粘贴内容到小程序路径：<br><code>/static/wxss/iconfont.wxss</code></li><li>5、在 app.wxss 中引用<br><code>@import "/static/wxss/iconfont.wxss";</code></li><li>6、使用的时候<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont 复制图标名字到这<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><ul><li>重新复制生成的css文件到wxss文件就行</li></ul><h2 id="二、导入iconfont组件方式"><a href="#二、导入iconfont组件方式" class="headerlink" title="二、导入iconfont组件方式"></a>二、导入iconfont组件方式</h2><ul><li>类似图片，可以有彩色</li><li>导入麻烦</li></ul><hr><h3 id="步骤：-1"><a href="#步骤：-1" class="headerlink" title="步骤："></a>步骤：</h3><ul><li><p>1、挑选需要的图标进购物车–&gt;项目</p></li><li><p>2、选择 symbol</p></li><li><p>3、复制该链接</p></li><li><p>4、小程序根目录下：</p><ul><li><code>npm init -y</code></li><li><code>npm install mini-program-iconfont-cli --save-dev</code>【安装插件】</li><li><code>npx iconfont init</code> 生成iconfont.json 文件</li><li>配置该文件  <pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"symbol_url"</span><span class="token operator">:</span> <span class="token string">"https:将之前复制的链接粘贴到这"</span><span class="token punctuation">,</span><span class="token property">"save_dir"</span><span class="token operator">:</span> <span class="token string">"./iconfont"</span><span class="token punctuation">,</span><span class="token property">"use_rpx"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"trim_icon_prefix"</span><span class="token operator">:</span> <span class="token string">"icon"</span><span class="token punctuation">,</span><span class="token property">"default_icon_size"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>npx iconfont-wechat</code> 生成 iconfont目录</li></ul></li><li><p>5、在app.json 文件按中配置</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"usingComponents"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"iconfont"</span><span class="token operator">:</span> <span class="token string">"/iconfont/iconfont"</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>6、使用</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iconfont</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>36<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>badanmu<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iconfont</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="更新-1"><a href="#更新-1" class="headerlink" title="更新"></a>更新</h3><ul><li>更新 iconfont文件中的链接</li><li><code>npx iconfont-wechat</code> 根目录下使用该指令【失败就重新安装那个插件】<blockquote><p>说明：<br>下载插件的时候，会生成 node_models 目录【体积较大】<br>更新的时候依赖该目录，若没有该目录，需要重新执行下载插件命令<br>引入后的使用并不依赖该目录【也就是说，可以删除】</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> wxminiprogram </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
            <tag> iconfont </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs配置、踩坑小记</title>
      <link href="/pages/nodejs/config.html"/>
      <url>/pages/nodejs/config.html</url>
      
        <content type="html"><![CDATA[<h2 id="淘宝镜像、cnpm"><a href="#淘宝镜像、cnpm" class="headerlink" title="淘宝镜像、cnpm"></a>淘宝镜像、cnpm</h2><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm config <span class="token function">set</span> registry=https:<span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span class="token comment"># 验证：</span>npm config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry=https:<span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span class="token comment"># 验证</span>cnpm <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="全局模块下载路径"><a href="#全局模块下载路径" class="headerlink" title="全局模块下载路径"></a>全局模块下载路径</h2><p>prefix = 创建的node_global文件夹所在路径<br>cache  = 创建的node_cache文件夹所在路径</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm config <span class="token function">set</span> prefix <span class="token string">"D:\Nodejs\node_global"</span>npm config <span class="token function">set</span> cache <span class="token string">"D:\Nodejs\node_cache"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="npm指令无打印输出、无效"><a href="#npm指令无打印输出、无效" class="headerlink" title="npm指令无打印输出、无效"></a>npm指令无打印输出、无效</h2><h3 id="解决：修改-npmrc"><a href="#解决：修改-npmrc" class="headerlink" title="解决：修改 .npmrc"></a>解决：修改 .npmrc</h3><ul><li><code>C:\User\用户名</code> 下找到.npmrc文件。</li><li>查看路径是否配置正确  <pre class="line-numbers language-none"><code class="language-none">prefix=C:\PxoFiles\Nodejs\node_globalcache=C:\PxoFiles\Nodejs\node_cache# 镜像registry=https://registry.npm.taobao.org/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>修改之前（错误例子参考）：  <pre class="line-numbers language-none"><code class="language-none">prefix=C:\User\PXO'C:\PxoFiles\Nodejs\node_global'cache=C:\User\PXO'C:\PxoFiles\Nodejs\node_cache'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>不知道为何，配置的时候自己把前缀加上了，导致控制台一直没有输出。</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs安装、踩坑</title>
      <link href="/pages/nodejs/install.html"/>
      <url>/pages/nodejs/install.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、下载nodejs"><a href="#1、下载nodejs" class="headerlink" title="1、下载nodejs"></a>1、下载nodejs</h2><p>windows下的NodeJS安装是比较方便的。</p><blockquote><p><a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p></blockquote><h2 id="2、安装过程"><a href="#2、安装过程" class="headerlink" title="2、安装过程"></a>2、安装过程</h2><p>安装过程基本直接“NEXT”就可以了。</p><blockquote><p>（windows的安装msi文件在过程中会直接添加path的系统变量，变量值是你的安装路径，例如“C:\Program Files\nodejs”）。</p></blockquote><h2 id="3、-安装完成后测试下"><a href="#3、-安装完成后测试下" class="headerlink" title="3、 安装完成后测试下"></a>3、 安装完成后测试下</h2><ul><li>安装完成后可以使用cmd（win+r然后输入cmd进入）测试下是否安装成功。</li></ul><blockquote><p>方法：在cmd下输入 node -v，出现下图版本提示就是完成了NodeJS的安装。</p></blockquote><h2 id="4、npm的安装。"><a href="#4、npm的安装。" class="headerlink" title="4、npm的安装。"></a>4、npm的安装。</h2><p>新版的NodeJS已经集成了npm，所以npm也一并安装好了。</p><blockquote><p>可以在cmd命令行输入” npm -v”来测试是否成功安装。如下图，出现版本提示便OK了。</p></blockquote><h2 id="5、安装已完成"><a href="#5、安装已完成" class="headerlink" title="5、安装已完成"></a>5、安装已完成</h2><p>常规NodeJS的搭建到现在为止已经完成了。</p><h2 id="6、npm配置"><a href="#6、npm配置" class="headerlink" title="6、npm配置"></a>6、npm配置</h2><p>npm作为一个NodeJS的模块管理，很有必要列出一些：</p><h3 id="①、模块路径、cache路径"><a href="#①、模块路径、cache路径" class="headerlink" title="①、模块路径、cache路径"></a>①、模块路径、cache路径</h3><p>先配置npm的全局模块的存放路径以及cache的路径，</p><p>例如希望将以上两个文件夹放在NodeJS的主目录下，便在NodeJs下建立”node_global”及”node_cache”两个文件夹。如下图</p><h3 id="②、使用cmd命令进行配置"><a href="#②、使用cmd命令进行配置" class="headerlink" title="②、使用cmd命令进行配置"></a>②、使用cmd命令进行配置</h3><p>启动cmd，输入</p><blockquote><p>npm config set prefix “C:\Program Files\nodejs\node_global”</p></blockquote><blockquote><p>npm config set cache “C:\Program Files\nodejs\node_cache”</p></blockquote><blockquote><p><font color="red">注意用户目录下的 <code>.npmrc</code> 文件，如果路径错误需要修改，否则会导致无法使用npm</font></p></blockquote><p>如果不进行这一步设置，npm的全局安装包，将不会在node安装文件夹里。</p><p>如果这个步骤出现错误，如：operation not permitted, mkdir ‘C:\Program Files\nodejs’，请使用管理员身份打开cmd命令行。</p><h3 id="③、测试"><a href="#③、测试" class="headerlink" title="③、测试"></a>③、测试</h3><p>现在我们来装个模块试试，</p><blockquote><p>在cmd命令行里面，输入“npm install express -g”（“-g”这个参数意思是装到global目录下，也就是上面说设置的“ C:\Program Files\nodejs\node_global ”里面。）。</p></blockquote><p>待cmd里面的安装过程滚动完成后，会提示“express”装在了哪、版本还有它的目录结构是怎样。如下图</p><h3 id="④、查看环境变量"><a href="#④、查看环境变量" class="headerlink" title="④、查看环境变量"></a>④、查看环境变量</h3><p>关闭cmd，打开系统对话框，“我的电脑”右键“属性”-“高级系统设置”-“高级”-“环境变量”。如下图</p><h3 id="⑤、配置node-path"><a href="#⑤、配置node-path" class="headerlink" title="⑤、配置node_path"></a>⑤、配置node_path</h3><p>进入环境变量对话框，在系统变量下新建” NODE_PATH”，输入” C:\Program Files\nodejs\node_global\node_modules“。（ps：这一步相当关键。）</p><p>2014.4.19新增：由于改变了module的默认地址，所以上面的用户变量都要跟着改变一下（用户变量”PATH”修改为“C:\Program Files\nodejs\node_global\ ”），要不使用module的时候会导致输入命令出现“xxx不是内部或外部命令，也不是可运行的程序或批处理文件”这个错误。</p><h3 id="⑥、测试"><a href="#⑥、测试" class="headerlink" title="⑥、测试"></a>⑥、测试</h3><p>以上步骤都OK的话，我们可以再次开启cmd命令行，进入node，输入“require(‘express’)”来测试下node的模块全局路径是否配置正确了。正确的话cmd会列出express的相关信息。如下图（如出错一般都是NODE_PATH的配置不对，可以检查下第④⑤步）</p><h2 id="7、安装淘宝npm（cnpm）"><a href="#7、安装淘宝npm（cnpm）" class="headerlink" title="7、安装淘宝npm（cnpm）"></a>7、安装淘宝npm（cnpm）</h2><h3 id="1-输入以下命令"><a href="#1-输入以下命令" class="headerlink" title="(1)输入以下命令"></a>(1)输入以下命令</h3><blockquote><p>npm install -g cnpm –registry=https: //registry.npm.taobao.org</p></blockquote><h3 id="2-输入cnpm-v命令，查看结果"><a href="#2-输入cnpm-v命令，查看结果" class="headerlink" title="(2)输入cnpm -v命令，查看结果"></a>(2)输入cnpm -v命令，查看结果</h3><blockquote><p>cnpm -v</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> 踩坑 </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git cz的配置与使用</title>
      <link href="/pages/git/gitcz.html"/>
      <url>/pages/git/gitcz.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="1、安装-nvm"><a href="#1、安装-nvm" class="headerlink" title="1、安装 nvm"></a>1、安装 nvm</h2><blockquote><p>链接地址：<br><a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p></blockquote><h3 id="下载、解压、安装"><a href="#下载、解压、安装" class="headerlink" title="下载、解压、安装"></a>下载、解压、安装</h3><ul><li>安装目录 <code>D:\program files\nvm</code></li><li>Nodjs 目录 <code>C:\program files\nodejs</code> （默认）</li></ul><h3 id="添加镜像"><a href="#添加镜像" class="headerlink" title="添加镜像"></a>添加镜像</h3><ul><li>打开 setting.txt 文件<ul><li><code>"D:\Program Files\nvm\settings.txt"</code></li></ul></li><li>在文件末尾追加：<pre class="line-numbers language-none"><code class="language-none">node_mirror: http://npm.taobao.org/mirrors/node/ npm_mirror: https://npm.taobao.org/mirrors/npm/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ul><li>NVM_HOME<ul><li><code>D:\program files\nvm</code></li></ul></li><li>NVM_SYMLINK<ul><li>【其实是 D:\Pxoprogram\nvm\v17.6.0 在c:/program/nodejs下的一个快捷方式】</li><li><code>C:\program files\nodejs</code></li></ul></li></ul><h3 id="安装使用最新版本-NVM"><a href="#安装使用最新版本-NVM" class="headerlink" title="安装使用最新版本 NVM"></a>安装使用最新版本 NVM</h3><blockquote><p>管理员身份运行 cmd / powershell</p></blockquote><ul><li><code>nvm install latest</code></li><li><code>nvm use 最新版版本号</code></li></ul><h2 id="2、安装、配置-npm"><a href="#2、安装、配置-npm" class="headerlink" title="2、安装、配置 npm"></a>2、安装、配置 npm</h2><ul><li><code>npm config set prefix "D:/program files/nvm/npm"</code> 确定npm的安装路径<br>  <font color="red">npm不是内部或外部指令…：跳转到类似 D:\Pxoprogram\nvm\v17.6.0 路径下打开命令行执行就行</font></li><li><code>npm install npm -g</code> 安装npm，执行后会在下面的路径下释放npm的东西</li><li>添加环境变量：<ul><li>NODE_PATH</li><li><code>D:\programs files\nvm\npm\node_modules</code></li></ul></li><li>添加 NPM_HOME 【好像不必须】<ul><li><code>D:\programs files\nvm\npm</code></li></ul></li><li>==一定要添加到环境变量 path== <font color="red">大坑</font><ul><li><code>D:\programs files\nvm\npm</code></li></ul></li></ul><p>几个命令</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">npm version // 查看安装的所有包+版本npm update 包 // 升级某个包npm install ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、安装-commitizen-和-changelog"><a href="#3、安装-commitizen-和-changelog" class="headerlink" title="3、安装 commitizen 和 changelog"></a>3、安装 commitizen 和 changelog</h2><p><font color="red">node不是…..: 查看环境变量NVM_SYMLINK的路径是否存在，不在的话设置为类似 D:\Pxoprogram\nvm\v17.6.0（nodejs目录）</font></p><ul><li><code>npm install -g commitizen</code></li><li><code>npm install -g conventional-changelog-cli</code></li><li><code>npm install -g cz-conventional-changelog</code></li><li><code>echo '{ "path": "cz-conventional-changelog" }' &gt; ~/.czrc</code> 该命令会在C:/users/用户名下面释放一个.czrc文件</li><li>将这个.czrc文件转换为utf8格式，因为Git-bash只认utf8格式的该文件。<br>至此，git cz 和 changelog就安装完毕了。Tip: 可以使用notepad++来转换格式。</li></ul><blockquote><p>==注意==<br>添加 D:\Pxoprogram\Git\bin 【git 安装目录的 bin 到环境变量path】</p><ul><li>可以在cmd/ powershell 窗口使用 bash 命令【前提是上一步】<br>于是便可以在cmd 或者 powershell 使用 bash+git cz【原生 bash 不能使用上下键】</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git指令</title>
      <link href="/pages/git/cmds.html"/>
      <url>/pages/git/cmds.html</url>
      
        <content type="html"><![CDATA[<hr><p><font color="tomato" size="4" face="宋体"><b>察看命令的参数<br><code>cmd --help</code></b></font></p><font color="tomato" size="4" face="宋体"><b><hr><p><font size="5" color="red" face="楷体"><b>目 录</b></font><br><a href="#peizhi">-配置</a><br><a href="#daili">-代理配置</a><br><a href="#cmd4">-大致流程</a></p><hr><p><a href="#file">-文件操作</a></p><hr><p><a href="#cmd1">-本地常用指令</a>  | <a href="#usual">-本地常用指令表</a>  |<br><a href="#cmd2">-远程常用命令</a>  | -<a href="#cmd3">多人协同</a></p><hr><p><span id="peizhi">配置</span></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"xxxx@163.com"</span>$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"lalala"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>察看所有git配置<br><code>git config --list --show-origin</code></p><p>察看单个配置<br><code>git config uesr.name</code></p><p>移除[user]部分<br><code>gif config --global --remove-section user</code><br>-global 可以是 local、system</p><p>编辑配置文件<br><code>git config --global --edit</code></p><hr><p>配置编辑器为Notepad++<br><code>git config --local core.editor "'D:/xxxxxx/xxxxx/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"</code></p><p>恢复编辑器为Vim<br><code>git config --global --unset core.editor</code></p><hr><p><span id="daili">配置代理     [注意端口可能不是1080，注意协议]</span></p><ul><li><p>全局<br><code>git config --global http.proxy http://127.0.0.1:1080</code><br><code>git config --global https.proxy https://127.0.0.1:1080</code></p></li><li><p>单独配置github<br><code>git config --global http.https://github.com.proxy https://127.0.0.1:1080</code><br><code>git config --global https.https://github.com.proxy https://127.0.0.1:1080</code></p><p>  <code>git config --global http.https://github.com.proxy socks5://127.0.0.1:1080</code><br>  <code>git config --global https.https://github.com.proxy socks5://127.0.0.1:1080</code></p></li><li><p>重置代理配置<br>  <code>git config --global --unset http.proxy</code><br>  <code>git config --global --unset https.proxy</code></p></li></ul><hr><p>HTTP协议 【需要每次输入密码】<br>全局<br><code>git config --global http.proxy http://127.0.0.1:1080</code><br><code>git config --global https.proxy https://127.0.0.1:1080</code><br>单独配置<br><code>git config --global http.https://github.com.proxy https://127.0.0.1:1080</code><br><code>git config --global https.https://github.com.proxy https://127.0.0.1:1080</code></p><hr><p>SSH协议 【需要设置 <code>config</code>文件】<br>全局<br><code>git config --global http.proxy socks5://127.0.0.1:1080</code><br><code>git config --global https.proxy socks://127.0.0.1:1080</code><br>单独配置<br><code>git config --global http.https://github.com.proxy socks5://127.0.0.1:1080</code><br><code>git config --global https.https://github.com.proxy socks5://127.0.0.1:1080</code></p><ul><li><input disabled="" type="checkbox"> git-bash 运行 <code>~/.ssh</code>、<code>pwd</code>得到 <code>.ssh</code>的路径</li><li><input disabled="" type="checkbox"> 如果没有<code>config</code>文件则新建[没有后缀名]</li><li><input disabled="" type="checkbox"> 文件内容为下文，修改后保存</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ProxyCommand connect <span class="token parameter variable">-S</span> <span class="token number">127.0</span>.0.1:1080 %h %p<span class="token comment"># -S: SOCKS    -H: HTTP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>建议采用如下分域名代理设置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 必须是 github.com</span>Host github.com   HostName github.com   User <span class="token function">git</span>   ProxyCommand connect <span class="token parameter variable">-S</span> <span class="token number">127.0</span>.0.1:1080 %h %p   <span class="token comment"># -S: SOCKS    -H: HTTP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><blockquote><p><span id="file">文件操作</span></p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> 当前目录<br><code>pwd</code></li><li><input checked="" disabled="" type="checkbox"> 跳转<br><code>cd d:\wula\test</code></li><li><input checked="" disabled="" type="checkbox"> 枚举<br><code>dir</code><br><code>dir d:\test</code><br><code>ls</code></li><li><input checked="" disabled="" type="checkbox"> 新建目录<br><code>mkdir test</code><br><code>mkdir test/img -p</code></li><li><input checked="" disabled="" type="checkbox"> 重命名<br><code>mv name0 name1</code></li><li><input checked="" disabled="" type="checkbox"> 新建文件<br><code>echo test.py</code><br><code>echo 'import this'&gt;wula.py</code></li><li><input checked="" disabled="" type="checkbox"> 删除目录<br><code>rm -rf test</code></li><li><input checked="" disabled="" type="checkbox"> 删除文件<br><code>rm wula.py</code></li><li><input checked="" disabled="" type="checkbox"> 移动<br><code>mv test img/wula</code></li><li><input checked="" disabled="" type="checkbox"> 复制<br><code>cp lal.py test/lal.py</code><br><code>cp obj d:/new/test -r</code>  [拷贝多级目录]</li></ul><p><code>cp -r fold1 fold2</code> </p><blockquote><p>参数说明：<br>-a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。<br>-d：复制时保留链接。这里所说的链接相当于 Windows 系统中的快捷方式。<br>-f：覆盖已经存在的目标文件而不给出提示。<br>-i：与 -f 选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答 y 时目标文件将被覆盖。<br>-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。<br>-r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。<br>-l：不复制文件，只是生成链接文件。</p></blockquote><blockquote><p>实例<br>使用指令 cp 将当前目录 test/ 下的所有文件复制到新目录 newtest 下，输入如下命令：</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">cp</span> –r test/ newtest     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><blockquote><p><span id="cmd1">本地基本指令</span></p></blockquote><p><code>git init</code><br>把当前目录变成Git管理仓库。</p><p><code>find . -name '.git' | xargs rm -rf</code><br>删除本地<code>Git</code>仓库【删除了<code>.git</code> 目录】</p><p><code>git add readme.txt</code><br>将文件添加到暂存区</p><p><code>git commit -m '提交了文件readme.txt'</code><br>把文件提交到仓库+信息</p><p><code>git status</code><br>察看是否还有文件未提交</p><p><code>git diff readme.txt</code><br>察看文件改动内容</p><p><code>git log</code><br>察看历史记录</p><p><code>git log --pretty=oneline</code><br>察看简化历史记录</p><p><code>git resest --hard HEAD^</code><br>退回上一版本<br><code>git reset --hard HEAD^^</code><br>退回上上个版本<br><code>git reset --hard HEAD~90</code><br>退回到前90版本</p><p><code>git reflog</code><br>察看修改对应版本号<br><code>git reset --hard 版本号</code><br>退回到版本号对应的版本</p><p><code>cat readme.txt</code><br>察看readme.txt内容</p><p><code>git restore -- readme.txt</code><br>撤销readme.txt文件工作区的修改</p><table><tbody><tr>    <td rowspan="1" colspan="2" align="center" bgcolor="white">        <font color="k" size="4" face="YaHei" id="usual">常用指令表</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git init</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="b" size="4" face="楷体">把当前目录变成Git管理仓库。</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git add readme.txt</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="#f0f0f0">        <font color="b" size="4" face="楷体">将文件添加到暂存区</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git commit -m '提交了文件readme.txt'</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="b" size="4" face="楷体">把文件提交到仓库+信息</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git status</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="#f0f0f0">        <font color="b" size="4" face="楷体">察看是否还有文件未提交</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git diff readme.txt</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="b" size="4" face="楷体">察看文件改动内容</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git log</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="#f0f0f0">        <font color="b" size="4" face="楷体">察看历史记录</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git log --pretty=oneline</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="b" size="4" face="楷体">察看简化历史记录</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git resest --hard HEAD^</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="#f0f0f0">        <font color="b" size="4" face="楷体">退回上一版本</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git reset --hard HEAD^^</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="b" size="4" face="楷体">退回上上个版本</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git reset --hard HEAD~90</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="#f0f0f0">        <font color="b" size="4" face="楷体">退回到前90版本</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git reflog</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="b" size="4" face="楷体">察看修改对应版本号</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git reset --hard 版本号</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="#f0f0f0">        <font color="b" size="4" face="楷体">退回到版本号对应的版本</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">cat readme.txt</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="b" size="4" face="楷体">察看readme.txt内容</font>    </td></tr><tr>    <td rowspan="1" colspan="1" align="left" bgcolor="white">        <font color="k" size="3" face="YaHei">git restore -- readme.txt</font>    </td>    <td rowspan="1" colspan="1" align="left" bgcolor="#f0f0f0">        <font color="b" size="4" face="楷体">撤销readme.txt文件工作区的修改</font>    </td></tr></tbody></table><hr><blockquote><p><span id="cmd2">远程常用命令</span></p></blockquote><p><code>ssh-keygen -t rsa</code>[一路回车，用户文件下找.ssh]<br>生成私匙公匙(SSH KEY)<br>-私<code>id_rsa</code><br>-公<code>id_rsa.pub</code></p><p>查看远程信息<br><code>git remote -v</code></p><p>连接到GitHub<br><code>git remote rm origin</code><br><code>git remote add origin git@github.com:用户名/工程名.git</code><br><code>git push -u origin master</code><br>强制push【会覆盖仓库文件】<br><code>git push -f origin master</code><br>后续提交<br><code>git push -u origin master</code><br>克隆到本地仓库<br><code>git clone git@github.com:用户名/工程名.git</code></p><p>克隆指定分支<br>·git clone -b branch_1 <a href="mailto:git@github.com">git@github.com</a>:用户名/工程名.git· </p><hr><p>创建分支<br><code>git branch newone</code><br>切换到分支<br><code>git checkout newone</code><br>创建并切换到分支<br><code>git checkout -b newone</code><br>newone分支合并到master【master分支情况下】<br><code>git merge newone</code><br>删除分支<br><code>git branch -d newone</code></p><p>察看分支合并情况<br><code>git log</code><br>合并分支，禁用fast forward<br><code>git merge --no-ff -m "注释内容" newone</code></p><hr><blockquote><p><span id="cmd3">多人协同</span></p></blockquote><p>察看远程库信息<br><code>git remote</code><br><code>git remote -v</code> 详细信息</p><p>推送分支<br><code>git push origin master</code><br><code>git push origin newone</code><br>抓取分支<br><code>git clone https://github.com/用户名/工程名.git</code>  克隆到本地仓库<br><code>git checkout -b newone origin/newone</code>  创建本地newone分支<br>-于是可以将本地newone分支同步到远程仓库newone分支</p><p>抓取最新提交【合并】<br><code>git pull</code></p><hr><blockquote><p><span id="cmd4">操作流程大致整理</span></p></blockquote><p>GitHub<br><code>git init</code><br><code>git add .</code><br><code>git commit -m '注释'</code><br><font color="red">Github手动创建一个空仓库【如果本地已经建好仓库，就不要勾选readme等文件】</font><br><code>git remote add origin git@github.com:username/repname</code><br><code>git push -u origin master</code>  <font color="greee">只有第一次需要</font> <code>-u</code><br><code>git pull</code></p><p><code>git clone git@github.com:username/repname</code></p><hr><p>GitLab<br><code>git init</code><br><code>git add .</code><br><code>git commit -m '注释'</code><br><code>git remote add origin git@gitlab.com:username/repname</code><br><code>git push -u origin master</code>  <font color="greee">只有第一次需要</font> <code>-u</code><br><code>git pull</code></p><p><code>git clone git@gitlab.com:username/repname</code></p><hr><blockquote><p><span id="cmd5"></span><br><span id="cmd6"></span><br><span id="cmd7"></span></p></blockquote></b></font>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指令 </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>研究生期间课件、电子教材、笔记汇总</title>
      <link href="/pages/resource/yanresource.html"/>
      <url>/pages/resource/yanresource.html</url>
      
        <content type="html"><![CDATA[<div class="admonition attention"><p class="admonition-title">说明 </p><p>仅用作学习交流，侵删。</p></div><h2 id="课件"><a href="#课件" class="headerlink" title="课件"></a>课件</h2><div class="admonition note"><p class="admonition-title">矩阵论 </p><blockquote><p>蓝奏云： <a href="https://shawn-pu.lanzouw.com/b0e4csk1a">https://shawn-pu.lanzouw.com/b0e4csk1a</a><br>密码： java</p></blockquote></div><div class="admonition note"><p class="admonition-title">人工智能</p><blockquote><p>蓝奏云： <a href="https://shawn-pu.lanzouw.com/b0e4csk5e">https://shawn-pu.lanzouw.com/b0e4csk5e</a><br>密码： java</p></blockquote></div><div class="admonition note"><p class="admonition-title">现代数字图像处理</p><blockquote><p>蓝奏云： <a href="https://shawn-pu.lanzouw.com/b0e4csk3c">https://shawn-pu.lanzouw.com/b0e4csk3c</a><br>密码： java</p></blockquote></div><div class="admonition note"><p class="admonition-title">工程优化</p><blockquote><p>蓝奏云：<a href="https://shawn-pu.lanzouw.com/b0e4ditcb">https://shawn-pu.lanzouw.com/b0e4ditcb</a><br>密码：java</p></blockquote></div><h2 id="电子教材"><a href="#电子教材" class="headerlink" title="电子教材"></a>电子教材</h2><div class="admonition note"><p class="admonition-title">汇总</p><blockquote><p>蓝奏云： <a href="https://shawn-pu.lanzouw.com/b0e4csl9e">https://shawn-pu.lanzouw.com/b0e4csl9e</a><br>密码：java</p><ul><li>工程优化</li><li>矩阵论</li><li>自然辩证法</li></ul></blockquote></div>]]></content>
      
      
      <categories>
          
          <category> resource </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硕士 </tag>
            
            <tag> 课件 </tag>
            
            <tag> 电子教材 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 指令</title>
      <link href="/pages/hexo/cmds.html"/>
      <url>/pages/hexo/cmds.html</url>
      
        <content type="html"><![CDATA[<ul><li>hexo init</li><li>hexo clean</li><li>hexo g | hexo generate</li><li>hexo s | hexo server</li><li>hexo d | hexo deploy</li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指令 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
